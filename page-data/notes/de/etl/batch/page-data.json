{"componentChunkName":"component---src-templates-entry-js","path":"/notes/de/etl/batch","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Batch Processing"},"html":"<h3>Defining Types of Data Processing</h3>\n<ul>\n<li>\n<p>The types of data processing are characterized by their latency:</p>\n<ul>\n<li><code class=\"language-text\">Batch processing:</code> Daily or longer</li>\n<li><code class=\"language-text\">Mini-Batch processing:</code> Hourly or longer</li>\n<li><code class=\"language-text\">Micro-Batch processing:</code> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>15</mn></mrow><annotation encoding=\"application/x-tex\">15</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">5</span></span></span></span> minutes intervals or more</li>\n<li><code class=\"language-text\">Real-Time processing:</code> Sub-second intervals</li>\n</ul>\n</li>\n<li>\n<p>They are also characterized by how data is loaded:</p>\n<ul>\n<li><code class=\"language-text\">Batch:</code> Loaded incrementally in an off-peak window</li>\n<li><code class=\"language-text\">Mini-Batch:</code> Loaded incrementally in intra-day loads</li>\n<li><code class=\"language-text\">Micro-Batch:</code> Loaded in intervals</li>\n<li><code class=\"language-text\">Real-Time:</code> Loaded in sub-second intervals</li>\n</ul>\n</li>\n<li>\n<p>They are also characterized by how data is captured:</p>\n<ul>\n<li><code class=\"language-text\">Batch:</code> Calling queries that use filtering</li>\n<li><code class=\"language-text\">Mini-Batch:</code> Calling queries that use filtering</li>\n<li><code class=\"language-text\">Mico-Batch:</code> Using a Change Data Capture (CDC)</li>\n<li><code class=\"language-text\">Real-Time:</code> Using a Change Data Capture (CDC)</li>\n</ul>\n</li>\n<li>\n<p>Capturing data from different sources is either performed:</p>\n<ul>\n<li>Through queries that filter based on a timestamp or flag</li>\n<li>Through a Change Data Capture mechanism that detects any changes as it is happening</li>\n</ul>\n</li>\n</ul>\n<h3>Summarizing the Types of Data Processing</h3>\n<table>\n<thead>\n<tr>\n<th><strong>Type</strong></th>\n<th><strong>Latency</strong></th>\n<th><strong>Capture</strong></th>\n<th><strong>Initialization</strong></th>\n<th><strong>Target Load</strong></th>\n<th><strong>Source Load</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Batch</td>\n<td>Daily</td>\n<td>Filter query</td>\n<td>Pull</td>\n<td>High impact</td>\n<td>High impact</td>\n</tr>\n<tr>\n<td>Mini-Batch</td>\n<td>Hourly</td>\n<td>Filter query</td>\n<td>Pull</td>\n<td>Low impact</td>\n<td>Queries at peak</td>\n</tr>\n<tr>\n<td>Micro-Batch</td>\n<td>Minutes</td>\n<td>CDC</td>\n<td>Push, then pull</td>\n<td>Low impact</td>\n<td>Some to none</td>\n</tr>\n<tr>\n<td>Real-Time</td>\n<td>Seconds</td>\n<td>CDC</td>\n<td>Push</td>\n<td>Low impact</td>\n<td>Some to none</td>\n</tr>\n</tbody>\n</table>\n<h3>Describing Reasons for Real-Time Processing</h3>\n<ul>\n<li>Consumer expectations for faster response times</li>\n<li>Ubiquity of cost effective resources</li>\n<li>Widespread adoption</li>\n</ul>\n<h3>Lemonade Stand Analogy for Batch Processing</h3>\n<ul>\n<li>John sells lemonade each day</li>\n<li>His brother queries John about his sales at the end of each day</li>\n<li>\n<p>Then, John does the following:</p>\n<ul>\n<li>Reviews the receipts for the day</li>\n<li>Calculates the sales for the day</li>\n</ul>\n</li>\n<li>Then, his brother records the daily sales in his notebook</li>\n</ul>\n<h3>Lemonade Stand Analogy for Mini-Batch Processing</h3>\n<ul>\n<li>John sells lemonade each day</li>\n<li>His brother queries John about his sales every hour</li>\n<li>\n<p>Then, John does the following:</p>\n<ul>\n<li>Reviews the receipts for that hour</li>\n<li>Calculates the sales for that hour</li>\n</ul>\n</li>\n<li>Then, his brother records the hourly sales in his notebook</li>\n</ul>\n<h3>Lemonade Stand Analogy for Real-Time Processing</h3>\n<ul>\n<li>John sells lemonade each day</li>\n<li>\n<p>His brother agrees to work outside with John</p>\n<ul>\n<li>His brother working outside represents a CDC approach</li>\n<li>Now, his brother handles administrative duties</li>\n<li>As a result, John is freed from the administrative burden</li>\n</ul>\n</li>\n<li>John hands his brother a receipt after each sale</li>\n<li>\n<p>Then, his brother does the following:</p>\n<ul>\n<li>Calculates the sales after each sale</li>\n<li>Records the sales after each sale</li>\n</ul>\n</li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://dbvisit.com/blog/real-time-vs-batch\" target=\"_blank\" rel=\"nofollow\">Examples of Batch Processing</a></li>\n<li><a href=\"http://www.oracle.com/us/products/middleware/data-integration/realtime-data-warehousing-bp-2167237.pdf\" target=\"_blank\" rel=\"nofollow\">Best Practices for Real-Time Data Warehousing</a></li>\n<li><a href=\"https://www.stitchdata.com/resources/change-data-capture/\" target=\"_blank\" rel=\"nofollow\">Defining the Change Data Capture Mechanism</a></li>\n</ul>"}},"pageContext":{"slug":"de/etl/batch","previousSlug":null,"nextSlug":"de/etl/lake","previousTitle":null,"nextTitle":"Data Lake"}},"staticQueryHashes":[]}