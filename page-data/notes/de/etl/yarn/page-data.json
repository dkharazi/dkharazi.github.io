{"componentChunkName":"component---src-templates-entry-js","path":"/notes/de/etl/yarn","result":{"data":{"markdownRemark":{"frontmatter":{"title":"YARN"},"html":"<h3>Describing Hadoop YARN</h3>\n<ul>\n<li>YARN is a component of the Hadoop ecosystem</li>\n<li>\n<p>YARN is used for:</p>\n<ul>\n<li>Managing computing resources in a cluster</li>\n<li>Monitoring computing resources in a cluster</li>\n<li>Scheduling jobs involving processing</li>\n</ul>\n</li>\n<li>It manages and monitors resources via <code class=\"language-text\">NodeManagers</code></li>\n<li>A job refers to a requested transformation</li>\n<li>An example of a job is a MapReduce job</li>\n<li>An application consists of one or many jobs</li>\n</ul>\n<h3>Describing the YARN Architecture</h3>\n<ul>\n<li>\n<p>YARN consists of:</p>\n<ul>\n<li>Many different nodes in a cluster</li>\n<li>Separate daemons living on those nodes</li>\n</ul>\n</li>\n<li>A node represents a single computer or server</li>\n<li>A cluster represents a collection of nodes</li>\n<li>These nodes are all interconnected with each other</li>\n<li>\n<p>The YARN daemons are:</p>\n<ul>\n<li><code class=\"language-text\">ResourceManager</code></li>\n<li><code class=\"language-text\">NodeManagers</code></li>\n<li><code class=\"language-text\">ApplicationMasters</code></li>\n<li>Containers</li>\n</ul>\n</li>\n<li>Typically, containers host any MapReduce job</li>\n<li>These jobs involve transforming blocks on <code class=\"language-text\">DataNodes</code></li>\n<li><code class=\"language-text\">NodeManagers</code> are used for overseeing its container</li>\n</ul>\n<h3>How YARN Handles Resource Management</h3>\n<ul>\n<li>\n<p>Resource management in YARN mostly is handled by:</p>\n<ul>\n<li>A <code class=\"language-text\">ResourceManager</code></li>\n<li>Some <code class=\"language-text\">NodeManagers</code></li>\n</ul>\n</li>\n<li>\n<p>A <code class=\"language-text\">ResourceManager</code> is used for:</p>\n<ul>\n<li>Initializing an <code class=\"language-text\">ApplicationMaster</code></li>\n<li>Initializing containers</li>\n<li>Allocating requested resources to an <code class=\"language-text\">ApplicationMaster</code></li>\n<li>\n<p>Recording information about:</p>\n<ul>\n<li>Available resources</li>\n<li>Resources allocated to applications in the cluster</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>A <code class=\"language-text\">NodeManager</code> is used for:</p>\n<ul>\n<li>Monitoring containers on its node</li>\n<li>Restoring failed containers on its node</li>\n<li>\n<p>Reporting usage of resources to the <code class=\"language-text\">ResourceManager</code></p>\n<ul>\n<li>CPU resources</li>\n<li>Memory resources</li>\n<li>Disk resources</li>\n<li>Network resources</li>\n</ul>\n</li>\n<li>Initializing containers on its node</li>\n</ul>\n</li>\n<li>Typically, there is a single <code class=\"language-text\">ResourceManager</code> in a cluster</li>\n<li>Typically, there is a single <code class=\"language-text\">NodeManager</code> per node</li>\n</ul>\n<h3>How YARN Handles Job Scheduling</h3>\n<ul>\n<li>\n<p>Job scheduling in YARN mostly is handled by:</p>\n<ul>\n<li>Some <code class=\"language-text\">ApplicationMasters</code></li>\n<li>Some containers</li>\n</ul>\n</li>\n<li>\n<p>An <code class=\"language-text\">ApplicationMaster</code> is used for:</p>\n<ul>\n<li>Requesting for additional or fewer resources from the <code class=\"language-text\">ResourceManager</code></li>\n<li>Allocating these resources to its containers</li>\n<li>Monitoring its application</li>\n</ul>\n</li>\n<li>\n<p>Containers are used for:</p>\n<ul>\n<li>Running an assigned application</li>\n<li>Reporting the application status to the <code class=\"language-text\">ApplicationMaster</code></li>\n</ul>\n</li>\n<li>Typically, there is a single <code class=\"language-text\">ApplicationMaster</code> per application</li>\n</ul>\n<h3>Illustrating the YARN Workflow</h3>\n<p><img src=\"/bbfa9b838f96a98e608931306c1f703e/yarn.gif\" alt=\"yarnworkflow\"></p>\n<p><img src=\"/a78c50cfec22a5de08ef854019c7e630/hdfsyarn.jpg\" alt=\"hdfsyarn\"></p>\n<h3>Defining the YARN Workflow</h3>\n<ol>\n<li>Client submits an application</li>\n<li>The <code class=\"language-text\">ResourceManager</code> initializes a container</li>\n<li>\n<p>The <code class=\"language-text\">ResourceManager</code> initializes an <code class=\"language-text\">ApplicationMaster</code></p>\n<ul>\n<li>There is an <code class=\"language-text\">ApplicationMaster</code>for each container</li>\n</ul>\n</li>\n<li>\n<p>An <code class=\"language-text\">ApplicationMaster</code> requests resources from the <code class=\"language-text\">ResourceManager</code></p>\n<ul>\n<li>It uses these resources for itself and its containers</li>\n</ul>\n</li>\n<li>\n<p>The <code class=\"language-text\">ApplicationMaster</code> receives resources</p>\n<ul>\n<li>It uses these resources for itself and its containers</li>\n</ul>\n</li>\n<li>\n<p>The <code class=\"language-text\">AM</code> notifies the <code class=\"language-text\">NM</code> to launch containers</p>\n<ul>\n<li>These containers run the application (MapReduce jobs)</li>\n<li>Containers running <code class=\"language-text\">map</code> tasks are run on the same node as the relevant blocks</li>\n<li>Containers running <code class=\"language-text\">reduce</code> tasks sometimes run on different nodes</li>\n<li>Containers running <code class=\"language-text\">reduce</code> tasks start after <code class=\"language-text\">map</code> tasks</li>\n</ul>\n</li>\n<li>\n<p>The applications request metadata from the <code class=\"language-text\">NameNode</code></p>\n<ul>\n<li>Only metadata of relevant blocks in <code class=\"language-text\">DataNodes</code> is returned</li>\n<li>These applications are executed in the containers</li>\n</ul>\n</li>\n<li>\n<p>The applications receive metadata from the <code class=\"language-text\">NameNode</code></p>\n<ul>\n<li>Only metadata of relevant blocks in <code class=\"language-text\">DataNodes</code> is received</li>\n<li>These applications are executed in the containers</li>\n</ul>\n</li>\n<li>\n<p>Each daemon monitors resources</p>\n<ul>\n<li>The <code class=\"language-text\">ResourceManager</code> monitors the cluster's status</li>\n<li>The <code class=\"language-text\">ApplicationMaster</code> monitors its application's status</li>\n<li>The <code class=\"language-text\">NodeManager</code> monitors its node's status</li>\n</ul>\n</li>\n<li>The application is complete</li>\n<li>The <code class=\"language-text\">ApplicationMaster</code> unregisters itself from the <code class=\"language-text\">ResourceManager</code></li>\n</ol>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/YARN.html\" target=\"_blank\" rel=\"nofollow\">Hadoop YARN Documentation</a></li>\n<li><a href=\"https://docs.portworx.com/install-with-other/docker/stateful-applications/hadoopandhdfs/#introduction\" target=\"_blank\" rel=\"nofollow\">Introduction to Hadoop HDFS and YARN</a></li>\n<li><a href=\"https://www.datadoghq.com/blog/hadoop-architecture-overview/#hdfs-architecture\" target=\"_blank\" rel=\"nofollow\">Defining the Hadoop Architecture with YARN</a></li>\n<li><a href=\"https://www.slideshare.net/cloudera/introduction-to-yarn-and-mapreduce-2\" target=\"_blank\" rel=\"nofollow\">Slides on Hadoop YARN</a></li>\n<li><a href=\"https://stackoverflow.com/a/50794483/12777044\" target=\"_blank\" rel=\"nofollow\">How YARN and the NameNode Interact</a></li>\n<li><a href=\"https://www.geeksforgeeks.org/hadoop-yarn-architecture/\" target=\"_blank\" rel=\"nofollow\">Describing the Hadoop Architecture</a></li>\n<li><a href=\"https://community.cloudera.com/t5/Community-Articles/Understanding-basics-of-HDFS-and-YARN/ta-p/248860\" target=\"_blank\" rel=\"nofollow\">How HDFS and YARN Work in Tandem</a></li>\n</ul>"}},"pageContext":{"slug":"de/etl/yarn","previousSlug":"de/etl/mapreduce","nextSlug":"de/etl/hive","previousTitle":"MapReduce","nextTitle":"Hive"}},"staticQueryHashes":[]}