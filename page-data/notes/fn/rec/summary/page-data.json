{"componentChunkName":"component---src-templates-entry-js","path":"/notes/fn/rec/summary","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Summary of Recommenders"},"html":"<h3>Two Basic Properties of Ratings</h3>\n<ol>\n<li>\n<p>Type of Feedback (i.e. implicit vs explicit)</p>\n<ul>\n<li><strong>Explicit Ratings</strong>: a metric explicitly defined by the user, which measures customer affinity</li>\n<li><strong>Implicit Rating</strong>: a metric we use as a proxy for an explicit rating(i.e. a proxy for an actual affinity score)</li>\n</ul>\n</li>\n<li>\n<p>Sparsity</p>\n<ul>\n<li>A matrix of ratings is always sparse because users only interact with a small % of items</li>\n<li>Meaning, there is a disproportionally large number of known ratings corresponding the most popular items</li>\n</ul>\n</li>\n</ol>\n<h3>Two Basic Properties of Recommenders</h3>\n<ol>\n<li>Level of personalization</li>\n<li>\n<p>Usage of contextual information</p>\n<ul>\n<li>Simple content-based and collaborative filtering models are categorized as <em>personalized, non-contextual</em> models</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"/6e8fbd14d21b3dd0ba6e3a83908287d7/persorecs.svg\" alt=\"personalizationrecs\"></p>\n<h3>Two Basic Types of Recommenders</h3>\n<ol>\n<li>\n<p>Content-Based Filtering Models</p>\n<ul>\n<li>A model using item features (e.g. age, gender, etc) to approximate ratings</li>\n</ul>\n</li>\n<li>\n<p>Collaborative Filtering Models</p>\n<ul>\n<li>A model using a rating matrix to approximate ratings</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"/89ae24e05fdd5a75eeb542f4cd03f247/recmethods.svg\" alt=\"recommendationmethods\"></p>\n<h3>User- and Item-Based Neighborhood Methods</h3>\n<ul>\n<li>Suppose we have a rating matrix for Spotify of listeners and songs</li>\n<li>\n<p>An item-based recommender would recommend songs based on other similar songs</p>\n<ul>\n<li>If I enjoy country and jazz, I may be recommended a song that is similar to other jazz songs I’ve enjoyed</li>\n<li>Or, I may be recommended a song that is similar to other country songs I’ve enjoyed</li>\n</ul>\n</li>\n<li>\n<p>A user-based recommender would recommend songs based on other similar listeners</p>\n<ul>\n<li>If I enjoy country and jazz, I may be recommended a song enjoyed by other listeners who enjoy country and jazz</li>\n</ul>\n</li>\n<li>\n<p>User-based and item-based are structurally similar, where the only difference is in the nature of the similarity measure</p>\n<ul>\n<li>As a result, we should expect the recommendations to be somewhat similar between the two over time</li>\n<li>Item-based can have some benefit in terms of scale (Amazon invented it for this reason), since they can return similar recommendations over time</li>\n<li>To find the right one for the problem at hand involves experimentation</li>\n</ul>\n</li>\n</ul>\n<h3>Illustrating Latent Factor Models</h3>\n<ul>\n<li>Suppose we have a rating matrix of customers and movies</li>\n<li>A latent factor model (with number of factors learned = 2) could create factors for whether a movie is a blockbuster or not, and whether the movie is designated for children or not  </li>\n</ul>\n<h3>Properties of Content-Based Filtering Recommenders</h3>\n<ul>\n<li>\n<p>User independence (advantage):</p>\n<ul>\n<li>Can make decent recommendations for new users</li>\n<li>This is because content-based models don’t learn about user-specific behavior</li>\n<li>Instead, they learn about feature-specific behavior (using basic classification/regression models)</li>\n</ul>\n</li>\n<li>\n<p>More feature engineering (disadvantage):</p>\n<ul>\n<li>Most content-based features require more feature engineering compared to only retrieving ratings for a rating matrix (for collaborative filtering)</li>\n</ul>\n</li>\n<li>\n<p>Trivial recommendations (disadvantage):</p>\n<ul>\n<li>Can often produce trivial recommendations without any novelty</li>\n<li>Since, content-based models converge towards the average customer</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/fa1b50041754b2b9937c920733cec41c/latentfactors.svg\" alt=\"latentfactors\"></p>\n<h3>Properties of Collaborative Filtering Recommenders</h3>\n<ul>\n<li>\n<p>Less feature engineering (advantage):</p>\n<ul>\n<li>Capable of making recommendations based only on patterns/similarities available in the rating matrix</li>\n</ul>\n</li>\n<li>\n<p>Involves transfer learning across users and items (advantage):</p>\n<ul>\n<li>If most customers who like hamburgers also like hot dogs, we can confidently recommend hot dogs to a customer who’s only ever interacted with hamburgers (and rated them highly)</li>\n</ul>\n</li>\n<li>\n<p>Sparsity (disadvantage):</p>\n<ul>\n<li>Difficult to build reliable rating predictions if the rating matrix is too sparse</li>\n</ul>\n</li>\n<li>\n<p>Cold-Start Problem (disadvantage)</p>\n<ul>\n<li>Unable to handle new users or items</li>\n</ul>\n</li>\n</ul>\n<h3>Tradeoff between Sparsity and Collaboration</h3>\n<ul>\n<li>In general, there is a tradeoff between mitigating sparsity and producing collaborative recommendations when switching between content-based method and collaborative methods</li>\n<li>\n<p>Content-based methods address issues with sparsity and the cold-start problem</p>\n<ul>\n<li>They do this by representing items through their meta-features</li>\n<li>As these are known in advance, recommendations can be computed even for new items for which no collaborative data has been gathered</li>\n</ul>\n</li>\n<li>\n<p>Unfortunately, no transfer learning occurs in content-based models</p>\n<ul>\n<li>Whereas, transfer learning occurs in collaborative models</li>\n<li>Instead, content-based models for each user are estimated in isolation and do not benefit from data on other users</li>\n</ul>\n</li>\n<li>\n<p>Consequently, content-based models perform worse than matrix-factorization models where collaborative information is available and require a large amount of data on each user</p>\n<ul>\n<li>Rendering them unsuitable for user cold-start</li>\n</ul>\n</li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://algorithmicweb.files.wordpress.com/2018/07/algorithmic-marketing-ai-for-marketing-operations-r1-7g.pdf\" target=\"_blank\" rel=\"nofollow\">Textbook about Algorithmic Marketing</a></li>\n<li><a href=\"https://arxiv.org/pdf/1507.08439.pdf\" target=\"_blank\" rel=\"nofollow\">Paper about Hybrid Contextual Model named LightFM</a></li>\n</ul>"}},"pageContext":{"slug":"fn/rec/summary","previousSlug":"fn/rec/multiobjective","nextSlug":null,"previousTitle":"Multi-Objective Methods","nextTitle":null}},"staticQueryHashes":[]}