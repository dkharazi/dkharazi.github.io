{"componentChunkName":"component---src-templates-entry-js","path":"/notes/js/misc/factory","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Factory Function"},"html":"<h3>Motivating Factory Functions</h3>\n<ul>\n<li>\n<p>There are three ways to create objects:</p>\n<ul>\n<li>Constructor Functions</li>\n<li>Classes</li>\n<li>Factory Functions</li>\n</ul>\n</li>\n<li>In JavaScript, each function is a function object</li>\n<li>An object is a collection of properties</li>\n<li>A property is an association between a name (or key) and a value</li>\n<li>Each of these approaches stores methods on a shared prototype</li>\n<li>Implying, these approaches offer most of the same features</li>\n</ul>\n<h3>Creating Objects with Constructor Functions</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// constructor</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">ConstructorCar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">ConstructorCar</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">drive</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vroom!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> car1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConstructorCar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>car1<span class=\"token punctuation\">.</span><span class=\"token function\">drive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Creating Objects with Classes</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// class</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassCar</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">drive</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vroom!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> car2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassCar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>car1<span class=\"token punctuation\">.</span><span class=\"token function\">drive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Creating Objects with Factory Functions</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// factory</span>\n<span class=\"token keyword\">const</span> proto <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">drive</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Vroom!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">factoryCar</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>proto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> car3 <span class=\"token operator\">=</span> <span class=\"token function\">factoryCar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>car3<span class=\"token punctuation\">.</span><span class=\"token function\">drive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Comparing Classes to Constructors</h3>\n<ul>\n<li>Prototype functions have been around before ES6</li>\n<li>Classes were included in the ES6 release</li>\n<li>ES6 classes desugar constructor functions</li>\n</ul>\n<h3>Benefits of Factories and Constructors</h3>\n<ul>\n<li>Inheritance is easier with prototypes</li>\n<li>Private properties better suited for factories</li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://medium.com/javascript-scene/javascript-factory-functions-with-es6-4d224591a8b1\" target=\"_blank\" rel=\"nofollow\">Factory Functions in JavaScript</a></li>\n<li><a href=\"https://medium.com/javascript-scene/javascript-factory-functions-vs-constructor-functions-vs-classes-2f22ceddf33e\" target=\"_blank\" rel=\"nofollow\">Object Creation in JavaScript</a></li>\n<li><a href=\"https://stackoverflow.com/a/14172862/12777044\" target=\"_blank\" rel=\"nofollow\">Benefits and Drawbacks of Factory Functions</a></li>\n</ul>"}},"pageContext":{"slug":"js/misc/factory","previousSlug":"js/misc/prototype","nextSlug":"js/misc/closure","previousTitle":"Prototype","nextTitle":"Function Closures"}},"staticQueryHashes":[]}