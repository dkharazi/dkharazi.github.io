{"componentChunkName":"component---src-templates-entry-js","path":"/notes/js/react/properties","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Properties and State"},"html":"<h3>Defining Properties in React</h3>\n<ul>\n<li>Properties hold information that influences the UI</li>\n<li>Specifically, properties maintain data about a component that isn't expected to change over time</li>\n<li>Properties are passed to a component</li>\n<li>Meaning, they are managed outside of a component</li>\n<li>Properties are referred to as <code class=\"language-text\">props</code></li>\n<li>Properties are declared as function parameters</li>\n<li>\n<p>Properties are immutable</p>\n<ul>\n<li>Since properties are defined outside of a component, a component isn't allowed to change the function parameter</li>\n</ul>\n</li>\n<li>\n<p>Properties can be accessed as:</p>\n<ul>\n<li><strong>Functional Component</strong>: <code class=\"language-text\">props</code></li>\n<li><strong>Class Component</strong>: <code class=\"language-text\">this.props</code></li>\n</ul>\n</li>\n</ul>\n<h3>Defining State in React</h3>\n<ul>\n<li>State holds information that influences the UI</li>\n<li>Specifically, state maintains data about a component that is expected to change over time</li>\n<li>State is managed within the component</li>\n<li>Meaning, they are managed within a component</li>\n<li>State is referred to as <code class=\"language-text\">state</code></li>\n<li>State is declared in the function or class body</li>\n<li>\n<p>State is mutable</p>\n<ul>\n<li>Since state is defined within a component, a component is capable of changing the state</li>\n</ul>\n</li>\n<li>\n<p>State can be accessed as:</p>\n<ul>\n<li><strong>Functional Component</strong>: <code class=\"language-text\">useState</code> Hook</li>\n<li><strong>Class Component</strong>: <code class=\"language-text\">this.state</code></li>\n</ul>\n</li>\n</ul>\n<h3>Overview of <code class=\"language-text\">props</code> and <code class=\"language-text\">state</code></h3>\n<ul>\n<li>\n<p>Mutability</p>\n<ul>\n<li>Properties are used for passing immutable data</li>\n<li>State is used for passing mutable data</li>\n</ul>\n</li>\n<li>\n<p>Location</p>\n<ul>\n<li>Properties are passed to components</li>\n<li>State is defined in a component</li>\n</ul>\n</li>\n<li>Generally, a state is used for holding data updated by event handlers</li>\n</ul>\n<h3>Describing the <code class=\"language-text\">setState</code> Method</h3>\n<ul>\n<li>\n<p>The state should never be modified directly</p>\n<ul>\n<li>Instead, the state should be updated using <code class=\"language-text\">setState</code></li>\n<li>The UI isn't rerendered unless <code class=\"language-text\">setState</code> is used</li>\n</ul>\n</li>\n<li>\n<p>The second argument of <code class=\"language-text\">setState</code> accepts a callback</p>\n<ul>\n<li>This is used for executing code after the state has been updated</li>\n</ul>\n</li>\n<li>\n<p>The first argument of <code class=\"language-text\">setState</code> accepts an object or callback</p>\n<ul>\n<li>This first argument is used for changing the state</li>\n<li>\n<p>The callback is used when we need to:</p>\n<ul>\n<li>Update the state based on the previous state</li>\n<li>Access any properties</li>\n</ul>\n</li>\n<li>\n<p>The callback accepts two arguments:</p>\n<ul>\n<li>First, the previous state <code class=\"language-text\">prevState</code></li>\n<li>Second, the properties <code class=\"language-text\">props</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 1a. Bad: never modify state directly</span>\n<span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 1b. Good: modify the state using setState</span>\n<span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setState <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    count<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 2. Good: arguments</span>\n<span class=\"token comment\">//      updater: function:</span>\n<span class=\"token comment\">//                 object</span>\n<span class=\"token comment\">//                 function:</span>\n<span class=\"token comment\">//                   prevState</span>\n<span class=\"token comment\">//                   props</span>\n<span class=\"token comment\">//      callback: function</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>updater<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span>callback<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 3. Good: accepts two arguments</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  count<span class=\"token operator\">:</span> state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>increment\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Illustrating Functional Component with Properties</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Greet</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Hello </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>nickName<span class=\"token punctuation\">}</span><span class=\"token plain-text\">, or </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>FirstName<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Illustrating Class Component with State</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      messsage<span class=\"token operator\">:</span> <span class=\"token string\">'Hello!'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">changeMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'Thanks you for clicking'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changeMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Click me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Illustrating Class Component with Properties and State</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Greet</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'Hello '</span> <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Passing object</span>\n  <span class=\"token function\">changeMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      message<span class=\"token operator\">:</span> <span class=\"token string\">'Thanks for clicking'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Passing callback function</span>\n  <span class=\"token comment\">// changeMessage() {</span>\n  <span class=\"token comment\">//   this.setState((prevState, props) => ({</span>\n  <span class=\"token comment\">//     message: 'Thanks for clicking' + props.name;</span>\n  <span class=\"token comment\">//   }))</span>\n  <span class=\"token comment\">// }</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">changeMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Click me</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=Cla1WwguArA&#x26;list=PLC3y8-rFHvwgg3vaYJgHGnModB54rxOk3&#x26;index=5\" target=\"_blank\" rel=\"nofollow\">Video about Functional Components</a></li>\n<li><a href=\"https://reactjs.org/docs/state-and-lifecycle.html\" target=\"_blank\" rel=\"nofollow\">Good Practices for State</a></li>\n</ul>"}},"pageContext":{"slug":"js/react/properties","previousSlug":"js/react/components","nextSlug":"js/react/destructure","previousTitle":"Introducing Components","nextTitle":"Destructuring Properties"}},"staticQueryHashes":[]}