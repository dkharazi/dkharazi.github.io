{"componentChunkName":"component---src-templates-entry-js","path":"/notes/js/react/style","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Styling and CSS"},"html":"<h3>Styling Components in React</h3>\n<ul>\n<li>\n<p>There are four options for styling components in React:</p>\n<ul>\n<li>CSS stylesheets</li>\n<li>Inline styling</li>\n<li>CSS modules</li>\n<li>CSS in JS libraries</li>\n</ul>\n</li>\n<li>We'll mostly cover the first three options</li>\n</ul>\n<h3>Approach 1: CSS Stylesheets</h3>\n<ul>\n<li>Usually, we'll want to style a component</li>\n<li>To do this, a JavaScript file must depend on a CSS file:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/*  myStyle.css */</span>\n<span class=\"token selector\">.primary</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> blue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Then, we can import the CSS in any JavaScript file</li>\n<li>Lastly, we can specify the <code class=\"language-text\">className</code> to match elements based on the contents of their class attribute</li>\n<li>The following is an example of this:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token string\">'./myStyle.css'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>primary<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello World</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Approach 2: Inline Styling</h3>\n<ul>\n<li>Inline style attributes can also be specified</li>\n<li>In React, inline styling if straightforward</li>\n<li>We can apply style attributes using an object:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> heading <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  fontSize<span class=\"token operator\">:</span> <span class=\"token string\">'72px'</span><span class=\"token punctuation\">,</span>\n  color<span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>heading<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello World</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Approach 3: CSS Modules</h3>\n<ul>\n<li>There is a naming convention for CSS modules in React</li>\n<li>The file name must be suffixed with <code class=\"language-text\">.module.js</code></li>\n<li>Following this approach, a CSS file must be defined:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* myStyle.module.css */</span>\n<span class=\"token selector\">.success</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Then, we can import the CSS in any JavaScript file</li>\n<li>Lastly, we can specify the <code class=\"language-text\">className</code> to import CSS classes from a CSS module</li>\n<li>The following is an example of this:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> styles <span class=\"token keyword\">from</span> <span class=\"token string\">'./myStyle.module.css'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Hello World\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Comparing CSS Modules with Stylesheets</h3>\n<ul>\n<li>An advantage of using a module is that classes are locally scoped</li>\n<li>A class from a CSS stylesheet can be used in child components</li>\n<li>Whereas, a class from a CSS module can only be used in the component in which it has been imported</li>\n<li>This is because it uses a variable for the module, which can't be referenced in other components (unless imported)</li>\n<li>Implying, modules can help avoid CSS conflicts</li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=j5P9FHiBVNo&#x26;list=PLC3y8-rFHvwgg3vaYJgHGnModB54rxOk3&#x26;index=20\" target=\"_blank\" rel=\"nofollow\">Video about Styling and CSS in React</a></li>\n<li><a href=\"https://reactjs.org/docs/faq-styling.html\" target=\"_blank\" rel=\"nofollow\">Styling and CSS in React Docs</a></li>\n</ul>"}},"pageContext":{"slug":"js/react/style","previousSlug":"js/react/list","nextSlug":"js/react/form","previousTitle":"List Rendering","nextTitle":"Basics of Form Handling"}},"staticQueryHashes":[]}