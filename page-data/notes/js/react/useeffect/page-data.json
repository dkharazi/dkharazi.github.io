{"componentChunkName":"component---src-templates-entry-js","path":"/notes/js/react/useeffect","result":{"data":{"markdownRemark":{"frontmatter":{"title":"The useEffect Hook"},"html":"<h3>Defining the Effect Hook</h3>\n<ul>\n<li>The effect hook performs side effects</li>\n<li>Specifically, it performs side effects in functional components</li>\n<li>\n<p>It is close replacement for the following:</p>\n<ul>\n<li>componentDidMount</li>\n<li>componentDidUpdate</li>\n<li>componentWillUnmount</li>\n</ul>\n</li>\n</ul>\n<h3>What Does <code class=\"language-text\">useEffect</code> Do?</h3>\n<ul>\n<li>This hook tells React what to do after each render</li>\n<li>React will remember the function you passed</li>\n<li>This function is referred to as an <em>effect</em></li>\n<li>Then, React calls the effect after performing the DOM updates</li>\n<li>\n<p>In this effect, we may call things like:</p>\n<ul>\n<li>Setting the document title</li>\n<li>Fetching data</li>\n<li>Calling some imperative API</li>\n</ul>\n</li>\n</ul>\n<h3>Does <code class=\"language-text\">useEffect</code> Run after Every Render?</h3>\n<ul>\n<li>By default, this hook runs after every render</li>\n<li>Specifically, it runs after both mouting and updating</li>\n<li>Instead of thinking in terms of <em>mounting</em> and <em>updating</em>, it's easier to think of effects happening <em>after render</em></li>\n<li>React guarantees the DOM is updated once it runs the effects</li>\n</ul>\n<h3>Illustrating Side Effects without Hooks</h3>\n<ul>\n<li>Without using the <code class=\"language-text\">useEffect</code> hook, we must use class components to implement side effects</li>\n<li>The following is an example of this:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Counter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">contructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      count<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> title <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span>\n    title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> title <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">;</span>\n    title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">addCount</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      count<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>addCount<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          Click </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Illustrating Side Effects with <code class=\"language-text\">useEffect</code></h3>\n<ul>\n<li>When specifying <code class=\"language-text\">useEffect</code>, we request execution of the function passed as an argument</li>\n<li>Specifically, this function is executed every time the component renders</li>\n<li>This hook is placed inside the component in order to easily access the component's state and props without extra code</li>\n<li>The following interprets the above example using the <code class=\"language-text\">useEffect</code> hook:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Counter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">,</span> setCount<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Changes title during mounting and updating</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You clicked </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> times</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onclick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setCount</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Click </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token plain-text\"> times\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=06Y6aJzTmXY&#x26;list=PLC3y8-rFHvwgg3vaYJgHGnModB54rxOk3&#x26;index=49\" target=\"_blank\" rel=\"nofollow\">Video about Basics of useEffect Hook</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=nAuWOnFMlOw&#x26;list=PLC3y8-rFHvwgg3vaYJgHGnModB54rxOk3&#x26;index=50\" target=\"_blank\" rel=\"nofollow\">Video about Rendering with useEffect Hook</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=bYFYF2GnMy8&#x26;list=PLC3y8-rFHvwgg3vaYJgHGnModB54rxOk3&#x26;index=55\" target=\"_blank\" rel=\"nofollow\">Video about Fetching Data with useEffect 1</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=1tfd6ANaNRY&#x26;list=PLC3y8-rFHvwgg3vaYJgHGnModB54rxOk3&#x26;index=56\" target=\"_blank\" rel=\"nofollow\">Video about Fetching Data with useEffect 2</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=zm_09NER-R0&#x26;list=PLC3y8-rFHvwgg3vaYJgHGnModB54rxOk3&#x26;index=57\" target=\"_blank\" rel=\"nofollow\">Video about Fetching Data with useEffect 3</a></li>\n<li><a href=\"https://reactjs.org/docs/hooks-effect.html\" target=\"_blank\" rel=\"nofollow\">Effect Hooks in React Docs</a></li>\n</ul>"}},"pageContext":{"slug":"js/react/useeffect","previousSlug":"js/react/usestate","nextSlug":"js/react/conditional-rendering","previousTitle":"The useState Hook","nextTitle":"Conditional Rendering with Hooks"}},"staticQueryHashes":[]}