{"componentChunkName":"component---src-templates-entry-js","path":"/notes/ml/spacy/matcher","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Rule-Based Matching"},"html":"<h3>Motivating Rule-Based Matching</h3>\n<ul>\n<li>The <code class=\"language-text\">Matcher</code> class operates over <code class=\"language-text\">Token</code> objects</li>\n<li>The <code class=\"language-text\">PhraseMatcher</code> class operates over <code class=\"language-text\">Doc</code> objects</li>\n<li>These rule matches can refer to token annotations or large terminology lists</li>\n<li>\n<p>For example, we may use the <code class=\"language-text\">Matcher</code> class to find a combination of three tokens:</p>\n<ul>\n<li>A token whose <strong>lowercase form matches <em>hello</em></strong></li>\n<li>A token whose <strong><code class=\"language-text\">is_punct</code> flag is set to <code class=\"language-text\">True</code></strong></li>\n<li>A token whose <strong>lowercase form matches <em>world</em></strong></li>\n</ul>\n</li>\n</ul>\n<h3>Sample Code</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> doc <span class=\"token operator\">=</span> nlp<span class=\"token punctuation\">(</span><span class=\"token string\">'Barack Obama defends his healthcare reforms'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Initialize and add rules</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> matcher <span class=\"token operator\">=</span> PhraseMatcher<span class=\"token punctuation\">(</span>nlp<span class=\"token punctuation\">.</span>vocab<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> matcher<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token string\">'OBAMA'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> nlp<span class=\"token punctuation\">(</span><span class=\"token string\">'Barack Obama'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> matcher<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token string\">'HEALTH'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             nlp<span class=\"token punctuation\">(</span><span class=\"token string\">'health care reform'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             nlp<span class=\"token punctuation\">(</span><span class=\"token string\">'healthcare reforms'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Find matches</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> matcher<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">7732777389095836264</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3161894980173008574</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Get match ids</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> nlp<span class=\"token punctuation\">.</span>vocab<span class=\"token punctuation\">.</span>strings<span class=\"token punctuation\">[</span><span class=\"token number\">7732777389095836264</span><span class=\"token punctuation\">]</span>\n<span class=\"token string\">'OBAMA'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> nlp<span class=\"token punctuation\">.</span>vocab<span class=\"token punctuation\">.</span>strings<span class=\"token punctuation\">[</span><span class=\"token number\">3161894980173008574</span><span class=\"token punctuation\">]</span>\n<span class=\"token string\">'HEALTH'</span></code></pre></div>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://spacy.io/usage/rule-based-matching\" target=\"_blank\" rel=\"nofollow\">Rule-Based Matching</a></li>\n<li><a href=\"https://spacy.io/api/phrasematcher\" target=\"_blank\" rel=\"nofollow\">PhraseMatcher Class</a></li>\n<li><a href=\"https://stackoverflow.com/questions/55852115/token-extension-versus-matcher-versus-phrase-matcher-vs-entity-ruler-in-spacy\" target=\"_blank\" rel=\"nofollow\">Difference between Matcher and PhraseMatcher Classes</a></li>\n</ul>"}},"pageContext":{"slug":"ml/spacy/matcher","previousSlug":"ml/spacy/ner","nextSlug":"ml/spacy/goldparse","previousTitle":"Named Entity Recognition","nextTitle":"GoldParse"}},"staticQueryHashes":[]}