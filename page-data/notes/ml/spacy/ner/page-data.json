{"componentChunkName":"component---src-templates-entry-js","path":"/notes/ml/spacy/ner","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Named Entity Recognition"},"html":"<h3>Motivating Named Entity Recognition</h3>\n<ul>\n<li>An <code class=\"language-text\">EntityRecognizer</code> object will assign named entity labels to a <code class=\"language-text\">Span</code> of tokens</li>\n<li>A <code class=\"language-text\">Span</code> object is a slice from a <code class=\"language-text\">Doc</code> object</li>\n<li>A named entity is a <em>real-world object</em> that is assigned a name</li>\n<li>These names typically refer to a person, country, product, book title, etc.</li>\n<li>Spacy is able to recognize <a href=\"https://spacy.io/api/annotation#named-entities\" target=\"_blank\" rel=\"nofollow\">various types</a> of named entities</li>\n<li>An <code class=\"language-text\">EntityRecognizer</code> uses a CNN model to predict these named entities </li>\n</ul>\n<h3>Accessing Entity Annotations</h3>\n<ul>\n<li>The standard way of accessing entity annotations is the <code class=\"language-text\">Doc.ents</code> property</li>\n<li>This will produce a sequence of <code class=\"language-text\">Span</code> objects</li>\n<li>The <code class=\"language-text\">Span</code> object acts as a sequence of tokens, so we can iterate over the entity</li>\n<li>We can also retrieve information entity annotations for each <code class=\"language-text\">Token</code> using an IOB scheme</li>\n<li>\n<p>The IOB scheme includes the following annotations:</p>\n<ul>\n<li><code class=\"language-text\">I:</code> Token is inside an entity</li>\n<li><code class=\"language-text\">O:</code> Token is outside an entity</li>\n<li><code class=\"language-text\">B:</code> Token is the beginning of an entity</li>\n</ul>\n</li>\n</ul>\n<h3>Sample Code</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> spacy\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> spacy<span class=\"token punctuation\">.</span>tokens <span class=\"token keyword\">import</span> Span\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> doc <span class=\"token operator\">=</span> nlp<span class=\"token punctuation\">(</span><span class=\"token string\">\"San Francisco considers banning sidewalk delivery robots\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Document level entity annotations</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>start_char<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>end_char<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>label_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> doc<span class=\"token punctuation\">.</span>ents<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'San Francisco'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GPE'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Token level entity annotations</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>doc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ent_iob_<span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ent_type_<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'San'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GPE'</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>doc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ent_iob_<span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ent_type_<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'Francisco'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'I'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GPE'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Create new Doc</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> doc <span class=\"token operator\">=</span> nlp<span class=\"token punctuation\">(</span><span class=\"token string\">\"fb is hiring a new vice president of global policy\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Check if organization</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>start_char<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>end_char<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>label_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> doc<span class=\"token punctuation\">.</span>ents<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Set entity annotation</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> fb_ent <span class=\"token operator\">=</span> Span<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"ORG\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># create Span for new entity</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> doc<span class=\"token punctuation\">.</span>ents <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">.</span>ents<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span>fb_ent<span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>start_char<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>end_char<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>label_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> doc<span class=\"token punctuation\">.</span>ents<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fb'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ORG'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://spacy.io/usage/linguistic-features#named-entities\" target=\"_blank\" rel=\"nofollow\">Spacy Named Entities</a></li>\n<li><a href=\"https://spacy.io/api/entityrecognizer\" target=\"_blank\" rel=\"nofollow\">EntityRecognizer Class</a></li>\n<li><a href=\"https://spacy.io/api/annotation#named-entities\" target=\"_blank\" rel=\"nofollow\">Named Entity Annotations</a></li>\n<li><a href=\"https://spacy.io/api/span\" target=\"_blank\" rel=\"nofollow\">Span Class</a></li>\n</ul>"}},"pageContext":{"slug":"ml/spacy/ner","previousSlug":"ml/spacy/dependency","nextSlug":"ml/spacy/matcher","previousTitle":"Dependency Parsing","nextTitle":"Rule-Based Matching"}},"staticQueryHashes":[]}