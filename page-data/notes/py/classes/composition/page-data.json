{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/classes/composition","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Composition"},"html":"<h3>Describing Composition</h3>\n<ul>\n<li>Composition refers to declaring a class within a class</li>\n<li>Composition relates to the composite design pattern</li>\n<li>Specifically, a class known as a <strong>composite</strong> contains an object of another class known as a <strong>component</strong></li>\n<li>Composition is considered as lossely coupled</li>\n<li>Meaning, changes to the component class rarely affect the composite class</li>\n<li>Composition is typically more flexible than inheritance</li>\n</ul>\n<h3>Comparing Composition, Inheritance, and Aggregation</h3>\n<ul>\n<li>In inheritance, class A <strong>is a</strong> class B</li>\n<li>In composition, class A <strong>owns</strong> class B</li>\n<li>In aggregation, class A <strong>uses</strong> class B</li>\n<li>In composition, class B has no meaning or purpose in the system without class A</li>\n<li>In aggregation, class B exists independently from class A</li>\n<li>\n<p>For example, suppose we have a <code class=\"language-text\">Company</code>, <code class=\"language-text\">People</code>, and <code class=\"language-text\">Account</code> class</p>\n<ul>\n<li><code class=\"language-text\">Company</code> is an aggregation of <code class=\"language-text\">People</code></li>\n<li><code class=\"language-text\">Company</code> is a composition of <code class=\"language-text\">Accounts</code></li>\n<li>When a <code class=\"language-text\">Company</code> ceases to do business, its <code class=\"language-text\">Accounts</code> cease to exist</li>\n<li>However, its <code class=\"language-text\">People</code> continue to exist in this case</li>\n</ul>\n</li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://softwareengineering.stackexchange.com/a/61527\" target=\"_blank\" rel=\"nofollow\">Defining Inheritance and Aggregation</a></li>\n<li><a href=\"http://index-of.co.uk/Python/Python%20Essential%20Reference,%20Fourth%20Edition.pdf\" target=\"_blank\" rel=\"nofollow\">Python Essential Reference</a></li>\n<li><a href=\"https://realpython.com/inheritance-composition-python/\" target=\"_blank\" rel=\"nofollow\">Comparing Composition and Inheritance in Python</a></li>\n</ul>"}},"pageContext":{"slug":"py/classes/composition","previousSlug":"py/classes/inheritance","nextSlug":"py/classes/polymorphism","previousTitle":"Inheritance","nextTitle":"Polymorphism"}},"staticQueryHashes":[]}