{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/flask/blueprint","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Blueprints"},"html":"<h3>Describing Blueprints in Flask</h3>\n<ul>\n<li>A <code class=\"language-text\">Blueprint</code> object behaves similarly as a <code class=\"language-text\">Flask</code> object</li>\n<li>However, a blueprint is not actually an application</li>\n<li>Instead, it is a <em>blueprint</em> of how to construct applications</li>\n<li>Blueprints don't need to implement applications or view functions</li>\n<li>Blueprints are registered to an application</li>\n<li>\n<p>Blueprints achieve the following:</p>\n<ul>\n<li>Making application components more modular</li>\n<li>Supporting common patterns across applications</li>\n<li>Simplifying how large applications work</li>\n</ul>\n</li>\n</ul>\n<h3>Defining the Use Cases of Blueprints</h3>\n<ol>\n<li>\n<p>Factors an application into a set of blueprints</p>\n<ul>\n<li>This is ideal for larger applications</li>\n<li>\n<p>As a result, a project could do the following:</p>\n<ul>\n<li>Instantiate an application object</li>\n<li>Initialize several extensions</li>\n<li>Register a collection of blueprints</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Registers a blueprint to an application</p>\n<ul>\n<li>Registers it at a URL prefix and/or subdomain</li>\n<li>Parameters in the URL become common view arguments</li>\n<li>These view arguments can be used by any view function in the blueprint</li>\n</ul>\n</li>\n<li>\n<p>Registers a blueprint multiple times on an application</p>\n<ul>\n<li>To do this, it registers with different URL rules</li>\n</ul>\n</li>\n<li>\n<p>Blueprints provide the following:</p>\n<ul>\n<li>Template filters</li>\n<li>Static files</li>\n<li>Templates</li>\n<li>Other utilities</li>\n</ul>\n</li>\n<li>\n<p>Blueprints replace a need for creating multiple application objects</p>\n<ul>\n<li>Creating many application objects require separate config files</li>\n<li>Those config files then need to be managed by a WSGI</li>\n<li>With blueprints, we only need to register to an application multiple times</li>\n<li>This is done in the Flask code, rather than the WSGI</li>\n</ul>\n</li>\n</ol>\n<h3>Summarizing the Use Cases of Blueprints</h3>\n<ul>\n<li>A blueprint in Flask is not a pluggable app</li>\n<li>Meaning it is not actually an application</li>\n<li>Instead, it’s a set of operations registered to an application</li>\n<li>Blueprints can be registered to an app multiple times</li>\n<li>Blueprints provide shareable application configurations</li>\n<li>They can change an registered application object as necessary</li>\n<li>However, blueprints can't be unregistered to an application without destroying the application</li>\n</ul>\n<h3>Illustrating the Concept of Blueprints</h3>\n<ul>\n<li>Essentially, blueprints record operations</li>\n<li>Then, they execute them when registered to an application</li>\n<li>The following is a basic blueprint:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># myapp.py</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Blueprint\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> flas <span class=\"token keyword\">import</span> render_template<span class=\"token punctuation\">,</span> abort\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> jinja2 <span class=\"token keyword\">import</span> TemplateNoteFound\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> mypage <span class=\"token operator\">=</span> Blueprint<span class=\"token punctuation\">(</span><span class=\"token string\">'mypage'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                    __name__<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                    template_folder<span class=\"token operator\">=</span><span class=\"token string\">'templates'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> @mypage<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> defaults<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'page'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'index'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> @mypage<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/&lt;page>'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">def</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'pages/%s.html'</span> <span class=\"token operator\">%</span> page<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">except</span> TemplateNotFound<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         abort<span class=\"token punctuation\">(</span><span class=\"token number\">404</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>Here, we create a <code class=\"language-text\">mypage</code> blueprint</li>\n<li>The <code class=\"language-text\">mypage.route</code> decorator binds the <code class=\"language-text\">show</code> function to a URL</li>\n<li>Then, the blueprint will record the intention of registering the function <code class=\"language-text\">show</code> to the application</li>\n<li>It will prefix the endpoint of <code class=\"language-text\">show</code> with <code class=\"language-text\">mypage</code></li>\n<li>This is because it was given to the <code class=\"language-text\">Blueprint</code> constructor</li>\n<li>The blueprint’s name does not modify the URL, only the endpoint</li>\n</ul>\n<h3>Registering Blueprints in Flask</h3>\n<ul>\n<li>The <code class=\"language-text\">register_blueprint</code> method registers blueprints to apps</li>\n<li>The following is an example of registering a blueprint:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> myapp<span class=\"token punctuation\">.</span>mypage <span class=\"token keyword\">import</span> mypage\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> app <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> app<span class=\"token punctuation\">.</span>register_blueprint<span class=\"token punctuation\">(</span>mypage<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>The registered rules on the application can be accessed</li>\n<li>The following is an example of the rules:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> app<span class=\"token punctuation\">.</span>url_map\nMap<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token operator\">&lt;</span>Rule <span class=\"token string\">'/static/&lt;file>'</span> <span class=\"token punctuation\">(</span>HEAD<span class=\"token punctuation\">,</span> OPTIONS<span class=\"token punctuation\">,</span> GET<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> static<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">&lt;</span>Rule <span class=\"token string\">'/&lt;page>'</span> <span class=\"token punctuation\">(</span>HEAD<span class=\"token punctuation\">,</span> OPTIONS<span class=\"token punctuation\">,</span> GET<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> mypage<span class=\"token punctuation\">.</span>show<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">&lt;</span>Rule <span class=\"token string\">'/'</span> <span class=\"token punctuation\">(</span>HEAD<span class=\"token punctuation\">,</span> OPTIONS<span class=\"token punctuation\">,</span> GET<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> mypage<span class=\"token punctuation\">.</span>show<span class=\"token operator\">></span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>The first rule is the application itself</li>\n<li>The two other rules refer to the <code class=\"language-text\">show</code> function</li>\n<li>Notice, the function is prefixed by the blueprint <code class=\"language-text\">mypage</code></li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://flask.palletsprojects.com/en/1.1.x/blueprints/\" target=\"_blank\" rel=\"nofollow\">Basics of Blueprints in Flask</a></li>\n</ul>"}},"pageContext":{"slug":"py/flask/blueprint","previousSlug":"py/flask/reqcontext","nextSlug":null,"previousTitle":"Request Contexts","nextTitle":null}},"staticQueryHashes":[]}