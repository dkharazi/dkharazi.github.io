{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/flask/reqcontext","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Request Contexts"},"html":"<h3>Describing the Request Context</h3>\n<ul>\n<li>The request context tracks the request-level data during a request</li>\n<li>Flask avoids passing a request to each function</li>\n<li>It does this by creating objects <code class=\"language-text\">request</code> and <code class=\"language-text\">session</code></li>\n<li>This is similar to the the application context</li>\n</ul>\n<h3>Purpose of the Context</h3>\n<ul>\n<li>A <code class=\"language-text\">Flask</code> application handles a request</li>\n<li>It creates a <code class=\"language-text\">Request</code> object based on the environment it received from the WSGI server</li>\n<li>A worker handles only one request at a time</li>\n<li>The request data can be considered global to that worker during that request</li>\n<li>Flask automatically pushes a request context when handling a request</li>\n<li>\n<p>The following functions have access to the <code class=\"language-text\">request</code> proxy:</p>\n<ul>\n<li>View functions</li>\n<li>Error handlers</li>\n<li>Other functions</li>\n</ul>\n</li>\n</ul>\n<h3>Motivating the Lifetime of the Context</h3>\n<ul>\n<li>A flask application handles a request</li>\n<li>Then, it pushes a request context</li>\n<li>\n<p>When the request ends, then the request:</p>\n<ul>\n<li>Pops the request context</li>\n<li>Pops the application context</li>\n</ul>\n</li>\n<li>The context is unique to each thread</li>\n<li>The <code class=\"language-text\">request</code> proxy cannot be passed to another thread</li>\n<li>The other thread will have a different context stack</li>\n<li>Specifically, it doesn't know about the request that the parent thread was pointing to</li>\n</ul>\n<h3>Defining the Structure of Request Contexts</h3>\n<ul>\n<li>There is a stack that manages request contexts</li>\n<li>\n<p>This stack is referred to as the request context stack</p>\n<ul>\n<li>In the code, this is <code class=\"language-text\">_request_ctx_stack</code></li>\n</ul>\n</li>\n<li>\n<p>Each element in the stack is a single request context</p>\n<ul>\n<li>In the code, this is an <code class=\"language-text\">RequestContext</code> class</li>\n</ul>\n</li>\n<li>\n<p>Each request context is essentially a list of two objects:</p>\n<ul>\n<li>A single <code class=\"language-text\">request</code> object</li>\n<li>A single <code class=\"language-text\">session</code> object</li>\n</ul>\n</li>\n<li>In the code, these are represented using the <code class=\"language-text\">Request</code> and <code class=\"language-text\">Session</code> classes</li>\n</ul>\n<h3>Implementing a Request Context in Flask</h3>\n<ul>\n<li>Flask needs a <code class=\"language-text\">Flask</code> object to create an application context</li>\n<li>Flask needs an environment dictionary to create a request context</li>\n<li>The environment dictionary has all the client data and is taken from the browser</li>\n<li>The applications and request context are both created simultaneously</li>\n<li>\n<p>The steps include the following:</p>\n<ol>\n<li>A <code class=\"language-text\">Flask</code> object is created</li>\n<li>An application context is created when an <code class=\"language-text\">app</code> variable is assigned</li>\n<li>A request context is then created when getting an environment dictionary</li>\n<li>View functions are invoked</li>\n<li>Gain access to objects <code class=\"language-text\">g</code>, <code class=\"language-text\">current_app</code>, <code class=\"language-text\">request</code>, and <code class=\"language-text\">session</code></li>\n</ol>\n</li>\n</ul>\n<h3>Defining the Lifetime of Request Contexts</h3>\n<ul>\n<li>\n<p>A request context is created based on the following steps:</p>\n<ul>\n<li>WSGI server forwards request to flask app </li>\n<li>Flask app receives an HTTP request </li>\n<li>Flask app assigns the HTTP request to a <code class=\"language-text\">request</code> object</li>\n<li>Then, Flask assigns the <code class=\"language-text\">request</code> object to a request context</li>\n</ul>\n</li>\n<li>The <code class=\"language-text\">Request</code> class is used to create a <code class=\"language-text\">request</code> object</li>\n<li>The <code class=\"language-text\">RequestContext</code> class represents a request context</li>\n</ul>\n<h3>Methods for Creating Request Contexts</h3>\n<ul>\n<li>\n<p>A request context is <strong>manually</strong> created in two ways:</p>\n<ul>\n<li>\n<p><code class=\"language-text\">with app.request_context(environ)</code></p>\n<ul>\n<li>This manually creates a real request context</li>\n<li>This can be difficult and unnecessary</li>\n<li>See PEP3333 for more information</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">with app.test_request_context(&#39;/&#39;)</code></p>\n<ul>\n<li>This manually creates an artifical request context</li>\n<li>This should not be used for production</li>\n<li>This should only be used for testing</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Essentially, a <code class=\"language-text\">session</code> is a view of the session cookies</li>\n<li>These cookies are stored in the request context</li>\n<li>A <code class=\"language-text\">session</code> is represented as a dictionary</li>\n</ul>\n<h3>Notes on Proxies</h3>\n<ul>\n<li>Some of the objects provided by Flask are proxies to other objects</li>\n<li>The proxies are accessed in the same way for each worker thread</li>\n<li>However, they point to the unique object bound to each worker</li>\n<li>These workers are behind the scenes</li>\n<li>There is a slight distinction between objects and proxies</li>\n<li>\n<p>This distinction should be noted for the following:</p>\n<ul>\n<li>The proxy objects can't fake their type as the actual objects</li>\n<li>References to proxied object is needed in some situations</li>\n</ul>\n</li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://flask.palletsprojects.com/en/1.1.x/reqcontext/\" target=\"_blank\" rel=\"nofollow\">Basics of Request Contexts</a></li>\n</ul>"}},"pageContext":{"slug":"py/flask/reqcontext","previousSlug":"py/flask/appcontext","nextSlug":"py/flask/blueprint","previousTitle":"Application Contexts","nextTitle":"Blueprints"}},"staticQueryHashes":[]}