{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/flask/view","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Views"},"html":"<h3>Describing Pluggable Views</h3>\n<ul>\n<li>Pluggable views are inspired by the generic views from Django</li>\n<li>They are used to replace parts of implementations</li>\n<li>Let's use this function as an example:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> @app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/users/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">def</span> <span class=\"token function\">show_users</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     users <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'users.html'</span><span class=\"token punctuation\">,</span> users<span class=\"token operator\">=</span>users<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>And convert it into a customizable view:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> flask<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> View\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ListView</span><span class=\"token punctuation\">(</span>View<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">get_template_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">raise</span> NotImplementedError<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">dispatch_request</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         context <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'objects'</span><span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>get_objects<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> \n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserView</span><span class=\"token punctuation\">(</span>ListView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">get_template_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> <span class=\"token string\">'users.html'</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">get_objects</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">return</span> User<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Method Based Dispatching</h3>\n<ul>\n<li>Executing a different function for each HTTP method is useful for RESTful APIs</li>\n<li>We can do this with <code class=\"language-text\">flask.views.MethodView</code></li>\n<li>Each HTTP method maps to a function with the same name</li>\n<li>As a result, we don't need to provide the <code class=\"language-text\">methods</code> attribute</li>\n<li>The following is an example:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> flask<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> MethodView\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserAPI</span><span class=\"token punctuation\">(</span>MethodView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         users <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">.</span>from_form_data<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> api_func <span class=\"token operator\">=</span> UserAPI<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> app<span class=\"token punctuation\">.</span>add_url_rule<span class=\"token punctuation\">(</span><span class=\"token string\">'/users/'</span><span class=\"token punctuation\">,</span> view_func<span class=\"token operator\">=</span>api_func<span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Method Views for APIs</h3>\n<ul>\n<li>Suppose we're exposing a user object on the web</li>\n<li>Then, we want the user to inherit the following behavior:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><strong>URL</strong></th>\n<th><strong>Method</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">/users/</code></td>\n<td><code class=\"language-text\">GET</code></td>\n<td>Gives a list of all users</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">/users/</code></td>\n<td><code class=\"language-text\">POST</code></td>\n<td>Creates a new user</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">/users/&lt;id&gt;</code></td>\n<td><code class=\"language-text\">GET</code></td>\n<td>Shows a single user</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">/users/&lt;id&gt;</code></td>\n<td><code class=\"language-text\">PUT</code></td>\n<td>Updates a single user</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">/users/&lt;id&gt;</code></td>\n<td><code class=\"language-text\">DELETE</code></td>\n<td>Deletes a single user</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>We could do this nicely using <code class=\"language-text\">MethodView</code></li>\n<li>The following is an example:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserAPI</span><span class=\"token punctuation\">(</span>MethodView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span>     <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">if</span> user_id <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token comment\"># return a list of users</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">pass</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token comment\"># expose a single user</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             <span class=\"token keyword\">pass</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>      <span class=\"token keyword\">def</span> <span class=\"token function\">post</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>          <span class=\"token comment\"># create a new user</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>          <span class=\"token keyword\">pass</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>      <span class=\"token keyword\">def</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>          <span class=\"token comment\"># delete a single user</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>          <span class=\"token keyword\">pass</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>      <span class=\"token keyword\">def</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>          <span class=\"token comment\"># update a single user</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>          <span class=\"token keyword\">pass</span></code></pre></div>\n<ul>\n<li>Now, the routing system can be set up like:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> user_view <span class=\"token operator\">=</span> UserAPI<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token string\">'user_api'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># GET behavior</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> app<span class=\"token punctuation\">.</span>add_url_rule<span class=\"token punctuation\">(</span><span class=\"token string\">'/users/'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                  defaults<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'user_id'</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                  view_func<span class=\"token operator\">=</span>user_view<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                  methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># POST behavior</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> app<span class=\"token punctuation\">.</span>add_url_rule<span class=\"token punctuation\">(</span><span class=\"token string\">'/users/'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                  view_func<span class=\"token operator\">=</span>user_view<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                  methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># Other behavior</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> app<span class=\"token punctuation\">.</span>add_url_rule<span class=\"token punctuation\">(</span><span class=\"token string\">'/users/&lt;int:user_id>'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                  view_func<span class=\"token operator\">=</span>user_view<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>                  methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PUT'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'DELETE'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://flask.palletsprojects.com/en/1.1.x/views/\" target=\"_blank\" rel=\"nofollow\">Details about Pluggable Views in Flask</a></li>\n</ul>"}},"pageContext":{"slug":"py/flask/view","previousSlug":"py/flask/signal","nextSlug":"py/flask/appcontext","previousTitle":"Signals","nextTitle":"Application Contexts"}},"staticQueryHashes":[]}