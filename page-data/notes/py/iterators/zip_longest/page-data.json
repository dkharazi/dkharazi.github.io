{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/iterators/zip_longest","result":{"data":{"markdownRemark":{"frontmatter":{"title":"itertools.zip_longest"},"html":"<h3><code class=\"language-text\">itertools.zip_longest(*itr, fillvalue=None)</code></h3>\n<ul>\n<li>\n<p>The <code class=\"language-text\">zip_longest</code> function is used to:</p>\n<ul>\n<li>Cycle through each element of each iterable</li>\n<li>Maps elements from each of the iterables together</li>\n<li>If the iterables are uneven length, missing values are filled with <code class=\"language-text\">fillvalue</code></li>\n</ul>\n</li>\n<li>This iterables are based on the <code class=\"language-text\">*itr</code> parameter</li>\n<li>This filled value is based on the <code class=\"language-text\">fillvalue</code> parameter</li>\n<li>The <code class=\"language-text\">fillvalue</code> parameter is optional and defaults to None</li>\n<li><code class=\"language-text\">zip_longest</code> returns an iterator of elements zipped to each other</li>\n</ul>\n<h3>Illustrating the <code class=\"language-text\">zip_longest</code> Function</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> zip_longest\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> nums <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> letters <span class=\"token operator\">=</span> <span class=\"token string\">'yz'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> fruit <span class=\"token operator\">=</span> <span class=\"token string\">'apple'</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> itr <span class=\"token operator\">=</span> zip_longest<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span> letters<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> itr<span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'z'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> itr <span class=\"token operator\">=</span> zip_longest<span class=\"token punctuation\">(</span>letters<span class=\"token punctuation\">,</span> fruit<span class=\"token punctuation\">,</span> fillvalue<span class=\"token operator\">=</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> itr<span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'z'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'l'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://docs.python.org/3/library/itertools.html#itertools.zip_longest\" target=\"_blank\" rel=\"nofollow\">Documentation of the Zip_longest Function from Itertools</a></li>\n</ul>"}},"pageContext":{"slug":"py/iterators/zip_longest","previousSlug":"py/iterators/tee","nextSlug":"py/iterators/product","previousTitle":"itertools.tee","nextTitle":"itertools.product"}},"staticQueryHashes":[]}