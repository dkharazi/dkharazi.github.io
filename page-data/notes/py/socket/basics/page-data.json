{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/socket/basics","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Basics of Networking"},"html":"<h3>Defining Networking Protocols</h3>\n<ul>\n<li>\n<p>Python supports two interenet protocols:</p>\n<ul>\n<li>TCP</li>\n<li>UDP</li>\n</ul>\n</li>\n<li>\n<p><strong>TCP protocol</strong> is a reliable connection-oriented protocol</p>\n<ul>\n<li>Used to establish a two-way stream of communication between machines</li>\n<li>Uses three-way handshake</li>\n<li>More secure</li>\n<li>Heavyweight</li>\n<li>Slower communication</li>\n</ul>\n</li>\n<li>\n<p><strong>UDP protocol</strong> is a connectionless protocol</p>\n<ul>\n<li>Machines send a receive packets without establishing a connection</li>\n<li>Used for streaming</li>\n<li>Less secure</li>\n<li>Lightweight</li>\n<li>Faster communication</li>\n</ul>\n</li>\n<li>Consequently, the TCP protocol is more popular</li>\n</ul>\n<h3>Defining Sockets</h3>\n<ul>\n<li>Both network protocols are handled through a programming abstraction known as a socket</li>\n<li>\n<p>A <strong>socket</strong> allows a program to do the following:</p>\n<ul>\n<li>Receive incoming connections</li>\n<li>Make outgoing connections</li>\n<li>Send and receive data</li>\n</ul>\n</li>\n<li>A socket is represented as an unnamed file used by the system</li>\n<li>In other words, a socket is an endpoint of a connection between a client and a server</li>\n<li>\n<p>An endpoint is defined as:</p>\n<ul>\n<li>An address (IP address + port)</li>\n<li>A number of connections that will be backlogged until connections are refused</li>\n<li>Other properties</li>\n</ul>\n</li>\n<li>Before two machines communicate, both must create a socket object</li>\n<li>Essentially, sockets allow us to exchange information between processes across a network</li>\n</ul>\n<h3>Defining Ports</h3>\n<ul>\n<li>The machine receiving a connection must bind its socket object to a known port number</li>\n<li>Typically, this machine is the server</li>\n<li>A port is a 16-bit number in the range of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>−</mo><mn>65535</mn></mrow><annotation encoding=\"application/x-tex\">0-65535</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">6</span><span class=\"mord\">5</span><span class=\"mord\">5</span><span class=\"mord\">3</span><span class=\"mord\">5</span></span></span></span></li>\n<li>A port is managed by the operating system</li>\n<li>A <strong>port</strong> is used by clients to uniquely identify servers</li>\n<li>Ports <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>−</mo><mn>1023</mn></mrow><annotation encoding=\"application/x-tex\">0-1023</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">2</span><span class=\"mord\">3</span></span></span></span> are reserved by the system</li>\n<li>FOR TCP, only one application can listen on the same port at a time</li>\n</ul>\n<h3>Summarizing the Network and Transport Layers</h3>\n<ul>\n<li>An IP address belongs to the network layer</li>\n<li>A port number belong to the transport layer</li>\n<li>An IP address is used to identify the destination machine within a network</li>\n<li>A port number is used to identify the destination service within the system</li>\n<li>First, an IP Packet is received at the destination IP address</li>\n<li>Then, a port number is used by the OS to deliver the packets to the correct process</li>\n<li>A port number will be specified in the transport header within the IP packet</li>\n<li>Without the port number, the OS will have no way of knowing which process the packets should be delivered to</li>\n</ul>\n<h3>Why use Ports instead of Process IDs?</h3>\n<ul>\n<li>You may be thinking we could use process IDs instead of ports</li>\n<li>\n<p>You may be asking why did we create an entirely new concept when:</p>\n<ul>\n<li>Process ids are unique</li>\n<li>They identify which process is running on a machine</li>\n</ul>\n</li>\n<li>\n<p>However, we needed to create ports for the following reasons:</p>\n<ul>\n<li>\n<p>Process ids aren't stable</p>\n<ul>\n<li>They can change at any time (e.g. reboot, crashes, etc.)</li>\n</ul>\n</li>\n<li>\n<p>Running applications couldn't listen on multiple ports</p>\n<ul>\n<li>Applications listen on ports (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>80</mn></mrow><annotation encoding=\"application/x-tex\">80</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">8</span><span class=\"mord\">0</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>443</mn></mrow><annotation encoding=\"application/x-tex\">443</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span><span class=\"mord\">4</span><span class=\"mord\">3</span></span></span></span>, etc.)</li>\n<li>If the system was bound to a process id, it couldn't listen to different ports for different protocols]</li>\n</ul>\n</li>\n<li>\n<p>Process ids are inconsistent</p>\n<ul>\n<li>If our application is running on different machines (i.e. different IP addresses), then the OS for those machines would almost always choose different process ids for the applications to run on</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>Establishing a TCP Connection</h3>\n<ul>\n<li>Typically, a server is considered a TCP server if it is responsible for handling TCP connections</li>\n<li>\n<p>There are two different sockets created for the following:</p>\n<ul>\n<li>Receiving connections</li>\n<li>Performing subsequent communication with the client</li>\n</ul>\n</li>\n<li>Specifically, the <code class=\"language-text\">accept()</code> system call returns a new socket object</li>\n<li>This socket object is actually used for the connection</li>\n<li>This allows a server to manage connections from many clients simultaneously</li>\n<li>This involves the following steps using the <code class=\"language-text\">socket</code> module:</li>\n</ul>\n<p><img src=\"/img/tcp.png\" alt=\"tcpconnection\"></p>\n<h3>Example Server Program using <code class=\"language-text\">socket</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> socket<span class=\"token punctuation\">,</span> time\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">)</span> <span class=\"token comment\"># Create a TCP socket</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>               <span class=\"token comment\"># Listen on port 8888</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>                      <span class=\"token comment\"># Allow 5 connections</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>                      <span class=\"token comment\"># Starts web service</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     client<span class=\"token punctuation\">,</span> addr <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>accept<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\"># Get a connection</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     c <span class=\"token operator\">=</span> <span class=\"token string\">'Connection received'</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     client<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'ascii'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     client<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Example Client Program using <code class=\"language-text\">socket</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> socket\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> s <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">(</span>AF_INET<span class=\"token punctuation\">,</span> SOCK_STREAM<span class=\"token punctuation\">)</span> <span class=\"token comment\"># Create a TCP socket</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\"># Connect to server</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> tm <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span>                <span class=\"token comment\"># Receive 1024 bytes</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> s<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>Notice, text sent across the network needs to be encoded to ascii characters</li>\n<li>In Python 3, all strings are unicode by default</li>\n<li>Therefore, we need to call <code class=\"language-text\">encode(&#39;ascii&#39;)</code></li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"http://index-of.co.uk/Python/Python%20Essential%20Reference,%20Fourth%20Edition.pdf\" target=\"_blank\" rel=\"nofollow\">Python Essential Reference</a></li>\n<li><a href=\"https://unix.stackexchange.com/a/116616\" target=\"_blank\" rel=\"nofollow\">Details about How Sockets are Represented</a></li>\n<li><a href=\"https://stackoverflow.com/a/1694148/12777044\" target=\"_blank\" rel=\"nofollow\">Can Two Applications Listen to the Same Port</a></li>\n<li><a href=\"https://stackoverflow.com/a/4994055/12777044\" target=\"_blank\" rel=\"nofollow\">What do Sockets look like?</a></li>\n<li><a href=\"https://www.quora.com/Is-it-necessary-for-a-service-running-on-as-server-bind-to-a-port-number\" target=\"_blank\" rel=\"nofollow\">Why are Ports Necessary?</a></li>\n<li><a href=\"https://softwareengineering.stackexchange.com/a/301113\" target=\"_blank\" rel=\"nofollow\">Why use Ports instead of Process IDs?</a></li>\n</ul>"}},"pageContext":{"slug":"py/socket/basics","previousSlug":"py/socket/http","nextSlug":"py/socket/select","previousTitle":"HTTP Methods","nextTitle":"The selectors Module"}},"staticQueryHashes":[]}