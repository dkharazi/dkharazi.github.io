{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/socket/http","result":{"data":{"markdownRemark":{"frontmatter":{"title":"HTTP Methods"},"html":"<h3>Describing the Format of HTTP Requests</h3>\n<ul>\n<li>An HTTP client sends an HTTP request to a server</li>\n<li>\n<p>An HTTP request maintains the following format:</p>\n<ul>\n<li>A request line</li>\n<li>\n<p>Zero or more header lines</p>\n<ul>\n<li>Including general, request, and entity fields</li>\n</ul>\n</li>\n<li>An empty line</li>\n<li>Optional message body</li>\n</ul>\n</li>\n</ul>\n<h3>Describing the Format of HTTP Responses</h3>\n<ul>\n<li>First, a server receives a HTTP request message</li>\n<li>Then, that server responds with an HTTP response message</li>\n<li>HTTP responses maintain a similar format as HTTP requests</li>\n<li>\n<p>They maintain the following format:</p>\n<ul>\n<li>A request line</li>\n<li>Zero or more header lines</li>\n<li>An empty line</li>\n<li>Optional message body</li>\n</ul>\n</li>\n</ul>\n<h3>Components of HTTP Requests and Responses</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">Request Line:</code> Contains:</p>\n<ul>\n<li>A request method</li>\n<li>A URL of the desired resource</li>\n</ul>\n</li>\n<li><code class=\"language-text\">General Header:</code> General info about a request or response</li>\n<li><code class=\"language-text\">Entity Header:</code> Info about the resource of a request</li>\n<li><code class=\"language-text\">Request Header:</code> Information about the client</li>\n<li><code class=\"language-text\">Response Header:</code> Information about the server</li>\n<li><code class=\"language-text\">Message Body:</code> Data meant for the client or server recipient</li>\n<li>An HTTP request has a request header</li>\n<li>An HTTP response has a response header</li>\n<li>A typical request looks like the following:</li>\n</ul>\n<p><img src=\"/e2b55ecd2d200f86ce2c10241cbdbd8d/httprequest.svg\" alt=\"httprequest\"></p>\n<h3>Defining HTTP Request Methods</h3>\n<ol>\n<li>\n<p><strong>GET</strong> Method</p>\n<ul>\n<li>This method is given a server URI</li>\n<li>This method is used to retrieve information from this server</li>\n<li>Specifically, this method should only <em>retrieve</em> data</li>\n<li>It should not have any other effect on the data</li>\n</ul>\n</li>\n<li>\n<p><strong>HEAD</strong> Method</p>\n<ul>\n<li>This method is also given a server URI</li>\n<li>It is also used to retrieve information from this server</li>\n<li>However, it returns the status line and header section only</li>\n</ul>\n</li>\n<li>\n<p><strong>POST</strong> Method</p>\n<ul>\n<li>This method is used to send date to a server</li>\n<li>This method represents an addition of data</li>\n<li>\n<p>For example, this data could include:</p>\n<ul>\n<li>Customer information</li>\n<li>File uploads</li>\n<li>Data from HTML files</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>PUT</strong> Method</p>\n<ul>\n<li>This method is used to replace data from a server</li>\n<li>Specifically, it replaces this data with a given resource</li>\n<li>The target resource is given by a URI</li>\n<li>This method represents a replacement of data</li>\n</ul>\n</li>\n<li>\n<p><strong>DELETE</strong> Method</p>\n<ul>\n<li>This method is used to remove data from a server</li>\n<li>Specifically, the target resource is given by a URI</li>\n<li>The target resource is removed from the server</li>\n</ul>\n</li>\n<li>\n<p><strong>CONNECT</strong> Method</p>\n<ul>\n<li>This method is used to establish a tunnel to the server</li>\n<li>Specifically, the server is identified by a given URI</li>\n</ul>\n</li>\n<li>\n<p><strong>OPTIONS</strong> Method</p>\n<ul>\n<li>This method is used to describe the options of communication for the target resource</li>\n</ul>\n</li>\n<li>\n<p><strong>TRACE</strong> Method</p>\n<ul>\n<li>This method is used to perform a message loop-back test to a target resource</li>\n</ul>\n</li>\n</ol>\n<h3>Examples of HTTP Requests</h3>\n<ol>\n<li><strong>GET</strong> Method</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">GET /test.html HTTP/1.1\nHost: www.test101.com\nAccept: image/gif, image/jpeg, */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0\nContent-Length: 35\n\nbookId=12345&amp;author=Mike+Lane</code></pre></div>\n<ol start=\"2\">\n<li><strong>HEAD</strong> Method</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">HEAD /test.html HTTP/1.1\nHost: www.test101.com\nAccept: image/gif, image/jpeg, */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0\nContent-Length: 35\n\nbookId=12345&amp;author=Mike+Lane</code></pre></div>\n<ol start=\"3\">\n<li><strong>POST</strong> Method</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">POST /bin/login HTTP/1.1\nHost: www.test101.com\nAccept: image/gif, image/jpeg, */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0\nContent-Length: 35\n\nUser=Peter+Lee&amp;pw=123456&amp;action=login</code></pre></div>\n<ol start=\"4\">\n<li><strong>PUT</strong> Method</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PUT /new.html HTTP/1.1\nHost: www.test101.com\nAccept: image/gif, image/jpeg, */*\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0\nContent-Length: 31\nContent-type: text/html\n\n&lt;p&gt;New File&lt;/p&gt;</code></pre></div>\n<ol start=\"5\">\n<li><strong>DELETE</strong> Method</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">DELETE /file.html HTTP/1.1</code></pre></div>\n<ol start=\"6\">\n<li><strong>CONNECT</strong> Method</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">CONNECT server.example.com:80 HTTP/1.1\nHost: server.example.com:80\nProxy-Authorization: basic aGVsbG86d29ybGQ=</code></pre></div>\n<ol start=\"7\">\n<li><strong>OPTIONS</strong> Method</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">OPTIONS /resources/post-here/ HTTP/1.1\nHost: bar.other\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nConnection: keep-alive\nOrigin: http://foo.example\nAccess-Control-Request-Method: POST\nAccess-Control-Request-Headers: X-PINGOTHER, Content-Type</code></pre></div>\n<ol start=\"8\">\n<li><strong>TRACE</strong> Method</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">TRACE /index.html</code></pre></div>\n<h3>Defining HTTP Response Codes</h3>\n<ul>\n<li>HTTP response codes indicate the status of an HTTP request</li>\n<li>\n<p>These responses are grouped into five classes:</p>\n<ol>\n<li>\n<p><code class=\"language-text\">Informational Responses:</code> 100-199 codes</p>\n<ul>\n<li>The request was received and the process is continuing</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">Successful Responses:</code> 200-299 codes</p>\n<ul>\n<li>The action was successfully received and understood</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">Redirectional Responses:</code> 300-399 codes</p>\n<ul>\n<li>The action must be continued to complete the request</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">Client Errors:</code> 400-499 codes</p>\n<ul>\n<li>The request contains incorrect syntax</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">Server Errors:</code> 500-599 codes</p>\n<ul>\n<li>The server failed to fulfill any request</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://www.ntu.edu.sg/home/ehchua/programming/webprogramming/http_basics.html\" target=\"_blank\" rel=\"nofollow\">Basics of HTTP Methods</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\" target=\"_blank\" rel=\"nofollow\">Examples of HTTP Requests</a></li>\n<li><a href=\"https://www.tutorialspoint.com/http/http_requests.htm\" target=\"_blank\" rel=\"nofollow\">Description of HTTP Request Methods</a></li>\n<li><a href=\"https://www.tutorialspoint.com/http/http_responses.htm\" target=\"_blank\" rel=\"nofollow\">Description of HTTP Response Methods</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\" target=\"_blank\" rel=\"nofollow\">List of HTTP Response Codes</a></li>\n<li><a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.3\" target=\"_blank\" rel=\"nofollow\">Definition of Request Headers</a></li>\n<li><a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html#sec6.2\" target=\"_blank\" rel=\"nofollow\">Definition of Response Headers</a></li>\n<li><a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.5\" target=\"_blank\" rel=\"nofollow\">Definition of General Headers</a></li>\n<li><a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7.1\" target=\"_blank\" rel=\"nofollow\">Definition of Entity Fields</a></li>\n</ul>"}},"pageContext":{"slug":"py/socket/http","previousSlug":"py/socket/webserver","nextSlug":"py/socket/basics","previousTitle":"Web Servers","nextTitle":"Basics of Networking"}},"staticQueryHashes":[]}