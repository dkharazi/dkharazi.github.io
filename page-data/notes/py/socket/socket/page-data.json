{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/socket/socket","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Basics of socket API"},"html":"<h3>Introducing <code class=\"language-text\">socket</code></h3>\n<ul>\n<li>The <code class=\"language-text\">socket</code> module provides access to the standard socket interface</li>\n<li>It is used to handle many different networking protocols</li>\n<li>Most importantly, it handles the IP, which includes TCP and UDP protocols</li>\n<li>\n<p>This module is very low-level</p>\n<ul>\n<li>It provides direct access to the network functions provided by the operating system </li>\n</ul>\n</li>\n</ul>\n<h3>Describing Address Families</h3>\n<ul>\n<li>Some <code class=\"language-text\">socket</code> functions require the specification of an <em>address family</em></li>\n<li>This family specifies the network protocol being used</li>\n<li>\n<p>The following constants are defined for this purpose:</p>\n<ul>\n<li><code class=\"language-text\">AF_BLUETOOTH:</code> Bluetooth protocol</li>\n<li><code class=\"language-text\">AF_INET:</code> IPv4 protocols (TCP; UDP)</li>\n<li><code class=\"language-text\">AF_INET6:</code> IPv6 protocols (TCP; UDP)</li>\n<li><code class=\"language-text\">AF_NETLINK:</code> Netlink Interprocess Communication</li>\n<li><code class=\"language-text\">AF_PACKET:</code> Link-level packets</li>\n<li><code class=\"language-text\">AF_UNIX:</code> UNIX domain protocols</li>\n</ul>\n</li>\n<li>Obviously, <code class=\"language-text\">AF_INET</code> and <code class=\"language-text\">AF_INET6</code> are the most popular</li>\n</ul>\n<h3>Describing Socket Types</h3>\n<ul>\n<li>Some <code class=\"language-text\">socket</code> functions require the specification of a <em>socket type</em></li>\n<li>The socket type specifies the type of communication to be used within a given protocol family</li>\n<li>\n<p>The following constants are defined for this purpose:</p>\n<ul>\n<li><code class=\"language-text\">SOCK_STREAM:</code> TCP Connection</li>\n<li><code class=\"language-text\">SOCK_DGRAM:</code> UDP Datagrams</li>\n<li><code class=\"language-text\">SOCK_RAW:</code> Raw socket</li>\n<li><code class=\"language-text\">SOCK_RDM:</code> Reliable datagrams</li>\n</ul>\n</li>\n<li>Obviously, <code class=\"language-text\">SOCK_STREAM</code> and <code class=\"language-text\">SOCK_DGRAM</code> are the most popular</li>\n</ul>\n<h3>Describing <code class=\"language-text\">AF_INET</code> Addressing</h3>\n<ul>\n<li>In order to perform any communication on a socket, we need to specify a destination address</li>\n<li>The form of the address depends on the address family of the socket</li>\n<li>Internet applications using IPv4 are specified as a tuple</li>\n<li>Specifically, this tuple looks like <code class=\"language-text\">(host, port)</code></li>\n<li>The following are some examples:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(&#39;www.python.org&#39;, 80)\n(&#39;66.113.130.182&#39;, 25)</code></pre></div>\n<ul>\n<li>If <em>host</em> is the empty string, then it accepts any address</li>\n<li>This is typically used by servers when they want any client to connect</li>\n<li>Python uses DNS to resolve the host name into an IP address</li>\n<li>Meaning, we may get different IP addresses each time when specifying a host like <code class=\"language-text\">www.python.org</code></li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"http://index-of.co.uk/Python/Python%20Essential%20Reference,%20Fourth%20Edition.pdf\" target=\"_blank\" rel=\"nofollow\">Python Essential Reference</a></li>\n<li><a href=\"https://docs.python.org/3/library/socket.html\" target=\"_blank\" rel=\"nofollow\">Documentation for socket API</a></li>\n</ul>"}},"pageContext":{"slug":"py/socket/socket","previousSlug":"py/socket/select","nextSlug":"py/socket/create_connection","previousTitle":"The selectors Module","nextTitle":"socket.create_connection"}},"staticQueryHashes":[]}