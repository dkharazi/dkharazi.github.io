{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/threading/condition","result":{"data":{"markdownRemark":{"frontmatter":{"title":"threading.Condition"},"html":"<h3>Describing <code class=\"language-text\">Condition(lock=None)</code></h3>\n<ul>\n<li>A condition object is a synchronization primitive</li>\n<li>A condition object is built on top of another lock</li>\n<li>This lock is used when a thread is interested in a particular change of state or event ocurring</li>\n<li>\n<p>A typical use is a producer/consumer problem:</p>\n<ul>\n<li>One thread is a producer</li>\n<li>One thread is a consumer</li>\n</ul>\n</li>\n<li>The <code class=\"language-text\">Condition</code> constructor creates a new instance <code class=\"language-text\">c</code></li>\n<li>\n<p>The lock associated with a condition <code class=\"language-text\">c</code> is passed as an optional parameter <code class=\"language-text\">lock</code></p>\n<ul>\n<li><code class=\"language-text\">lock</code> is an instance of <code class=\"language-text\">Lock</code> or <code class=\"language-text\">RLock</code></li>\n<li><code class=\"language-text\">lock</code> is an <code class=\"language-text\">RLock</code> instance by default</li>\n</ul>\n</li>\n</ul>\n<h3>Describing <code class=\"language-text\">c.acquire(*args)</code></h3>\n<ul>\n<li>This methods acquires the underlying lock</li>\n<li>This method calls the corresponding <code class=\"language-text\">acquire(*args)</code> method on the underlying lock</li>\n<li>Then, it returns the results</li>\n</ul>\n<h3>Describing <code class=\"language-text\">c.release()</code></h3>\n<ul>\n<li>This method releases the underlying lock</li>\n<li>This method calls the corresponding <code class=\"language-text\">release</code> method on the underlying lock</li>\n</ul>\n<h3>Describing <code class=\"language-text\">c.wait(timeout=None)</code></h3>\n<ul>\n<li>This method waits until notified or until a timeout occurs</li>\n<li>This method is called after the calling thread has already acquired the lock</li>\n<li>\n<p>The following happens when called:</p>\n<ol>\n<li>The underlying lock is released</li>\n<li>The thread sleeps until it's awakened by a <code class=\"language-text\">notify</code> or <code class=\"language-text\">notify_all</code> call performed on <code class=\"language-text\">c</code> by another thread</li>\n<li>Once awakened, the thread requires the lock and the method returns</li>\n</ol>\n</li>\n<li>Here, <code class=\"language-text\">timeout</code> is a number of seconds</li>\n<li>\n<p>If this time expires, then:</p>\n<ul>\n<li>The thread is awakened</li>\n<li>The lock is reacquired</li>\n<li>The control is returned</li>\n</ul>\n</li>\n</ul>\n<h3>Describing <code class=\"language-text\">c.notify(n=1)</code></h3>\n<ul>\n<li>This method wakes up one or more threads waiting on <code class=\"language-text\">c</code></li>\n<li>This method is called only after the calling thread has acquired the lock</li>\n<li>It does nothing if no threads are waiting</li>\n<li><code class=\"language-text\">n</code> specifies the number of threads to awaken</li>\n<li>The default of <code class=\"language-text\">n</code> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></li>\n<li>Awakened threads don't return from the <code class=\"language-text\">wait</code> call intil they can reacquire the lock</li>\n<li><code class=\"language-text\">c.notify_all()</code> wakes up all threads waiting on <code class=\"language-text\">c</code></li>\n</ul>\n<h3>Example of <code class=\"language-text\">Condition</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> threading <span class=\"token keyword\">import</span> Thread<span class=\"token punctuation\">,</span> Condition\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> time\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> signal <span class=\"token operator\">=</span> Condition<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">chef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     signal<span class=\"token punctuation\">.</span>acquire<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'making food'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'needs salt'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     signal<span class=\"token punctuation\">.</span>wait_for<span class=\"token punctuation\">(</span>get_salt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done cooking'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     signal<span class=\"token punctuation\">.</span>notify<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     signal<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">hungry_customer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     signal<span class=\"token punctuation\">.</span>acquire<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'so hungry'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     signal<span class=\"token punctuation\">.</span>wait_for<span class=\"token punctuation\">(</span>eat<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     signal<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'goodbye'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">another_hungry_customer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     signal<span class=\"token punctuation\">.</span>acquire<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'me next'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     signal<span class=\"token punctuation\">.</span>wait_for<span class=\"token punctuation\">(</span>eat<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     signal<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clean plate'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'yum'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">get_salt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'much better'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">restaurant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     p <span class=\"token operator\">=</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>chef<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     c <span class=\"token operator\">=</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>hungry_customer<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     c2 <span class=\"token operator\">=</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>another_hungry_customer<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     p<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     c<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     c2<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> restaurant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmaking food\nneeds salt\nmuch better\ndone cooking\nso hungry\nyum\ngoodbye\nme <span class=\"token builtin\">next</span>\nyum\nclean plate</code></pre></div>\n<h3>References</h3>\n<ul>\n<li><a href=\"http://index-of.co.uk/Python/Python%20Essential%20Reference,%20Fourth%20Edition.pdf\" target=\"_blank\" rel=\"nofollow\">Python Essential References</a></li>\n<li><a href=\"https://docs.python.org/3/library/threading.html\" target=\"_blank\" rel=\"nofollow\">Documentation for Threading API</a></li>\n<li><a href=\"https://stackoverflow.com/a/7424818/12777044\" target=\"_blank\" rel=\"nofollow\">Use-Case of Conditions</a></li>\n<li><a href=\"https://hackernoon.com/synchronization-primitives-in-python-564f89fee732\" target=\"_blank\" rel=\"nofollow\">Examples of Conditions</a></li>\n</ul>"}},"pageContext":{"slug":"py/threading/condition","previousSlug":"py/threading/event","nextSlug":"py/threading/queue","previousTitle":"threading.Event","nextTitle":"threading.Queue"}},"staticQueryHashes":[]}