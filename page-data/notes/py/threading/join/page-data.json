{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/threading/join","result":{"data":{"markdownRemark":{"frontmatter":{"title":"t.join"},"html":"<h3>Describing <code class=\"language-text\">join(timeout=None)</code></h3>\n<ul>\n<li>\n<p>The <code class=\"language-text\">join</code> method waits until:</p>\n<ul>\n<li>The thread terminates</li>\n<li>Or a timeout occurs</li>\n</ul>\n</li>\n<li>The <code class=\"language-text\">timeout</code> represents the seconds until timeout</li>\n<li>In <code class=\"language-text\">t.join()</code>, the main thread will be blocked until thread <code class=\"language-text\">t</code> finishes executing</li>\n<li>Then, the main thread waits until thread <code class=\"language-text\">t</code> has finished</li>\n<li>Once <code class=\"language-text\">t</code> finishes, then the main thread can resume execution</li>\n<li>Specifically, the main thread starts executes code after <code class=\"language-text\">join</code></li>\n<li>Essentially, the main thread is paused until thread <code class=\"language-text\">t</code> finishes</li>\n</ul>\n<h3>Caveats of <code class=\"language-text\">join</code></h3>\n<ul>\n<li>A thread cannot join itself</li>\n<li>A thread cannot join before it has <code class=\"language-text\">start</code>ed</li>\n<li>Note, the scheduling of threads is done by the OS</li>\n<li>Implying, the order in which threads are run is determined by the operating system</li>\n<li>Meaning, multiple runs will produce different orderings</li>\n<li>Each thread's order of execution will vary from run to run</li>\n</ul>\n<h3>Setup Code for <code class=\"language-text\">join</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># sleepy.py</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> logging\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> threading <span class=\"token keyword\">import</span> Thread\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> time\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">sleepy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'thread started'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'thread done'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Example without <code class=\"language-text\">join</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> t <span class=\"token operator\">=</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>sleepy<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nthread started\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'main done'</span><span class=\"token punctuation\">)</span>\nmain done\nthread done</code></pre></div>\n<h3>Example with <code class=\"language-text\">join</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> t <span class=\"token operator\">=</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>sleepy<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nthread started\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> t<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># haults any further execution</span>\nthread done   <span class=\"token comment\"># until thread finishes</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'main done'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># now we can print</span>\nmain done</code></pre></div>\n<h3>References</h3>\n<ul>\n<li><a href=\"http://index-of.co.uk/Python/Python%20Essential%20Reference,%20Fourth%20Edition.pdf\" target=\"_blank\" rel=\"nofollow\">Python Essential References</a></li>\n<li><a href=\"https://docs.python.org/3/library/threading.html\" target=\"_blank\" rel=\"nofollow\">Documentation for Threading API</a></li>\n<li><a href=\"https://realpython.com/intro-to-python-threading/\" target=\"_blank\" rel=\"nofollow\">Examples of Threading in Python</a></li>\n<li><a href=\"https://stackoverflow.com/a/55015892/12777044\" target=\"_blank\" rel=\"nofollow\">Example of Joining Threads</a></li>\n<li><a href=\"https://stackoverflow.com/a/37073698/12777044\" target=\"_blank\" rel=\"nofollow\">Description of Blocking the Main Thread</a></li>\n<li><a href=\"https://stackoverflow.com/a/15086113/12777044\" target=\"_blank\" rel=\"nofollow\">Illustrating Main Thread Sleeping</a></li>\n</ul>"}},"pageContext":{"slug":"py/threading/join","previousSlug":"py/threading/run","nextSlug":"py/threading/is_alive","previousTitle":"t.run","nextTitle":"t.is_alive"}},"staticQueryHashes":[]}