{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/threading/threadpool","result":{"data":{"markdownRemark":{"frontmatter":{"title":"ThreadPoolExecutor"},"html":"<h3>Describing <code class=\"language-text\">ThreadPoolExecutor</code></h3>\n<ul>\n<li><code class=\"language-text\">ThreadPoolExecutor</code> is an <code class=\"language-text\">Executor</code> subclass</li>\n<li>It uses a pool of threads to execute calls asynchronously</li>\n<li>Deadlocks can occur when the callable associated with a <code class=\"language-text\">Future</code> waits on the result of another <code class=\"language-text\">Future</code></li>\n</ul>\n<h3>Example of <code class=\"language-text\">ThreadPoolExecutor</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> concurrent<span class=\"token punctuation\">.</span>futures <span class=\"token keyword\">import</span> ThreadPoolExecutor\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> concurrent<span class=\"token punctuation\">.</span>futures <span class=\"token keyword\">import</span> as_completes\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> urllib<span class=\"token punctuation\">.</span>request <span class=\"token keyword\">import</span> urlopen\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> URLS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'http://www.foxnews.com/'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token string\">'http://www.cnn.com/'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token string\">'http://europe.wsj.com/'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token string\">'http://www.bbc.co.uk/'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         <span class=\"token string\">'http://some-made-up-domain.com/'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># Retrieve a single page</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># and report the URL and contents</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">load_url</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">with</span> urlopen<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span>timeout<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> conn<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> conn<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># We can use a with statement</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># to ensure threads are cleaned up promptly</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">with</span> ThreadPoolExecutor<span class=\"token punctuation\">(</span>max_workers<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token comment\"># Start the load operations</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token comment\"># and mark each future with its URL</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     keys <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>submit<span class=\"token punctuation\">(</span>load_url<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     vals <span class=\"token operator\">=</span> url <span class=\"token keyword\">for</span> url <span class=\"token keyword\">in</span> URLS\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     future_to_url <span class=\"token operator\">=</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">,</span> vals<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> future <span class=\"token keyword\">in</span> as_completed<span class=\"token punctuation\">(</span>future_to_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         url <span class=\"token operator\">=</span> future_to_url<span class=\"token punctuation\">[</span>future<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>         data <span class=\"token operator\">=</span> future<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>References</h3>\n<ul>\n<li><a href=\"http://index-of.co.uk/Python/Python%20Essential%20Reference,%20Fourth%20Edition.pdf\" target=\"_blank\" rel=\"nofollow\">Python Essential References</a></li>\n<li><a href=\"https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor\" target=\"_blank\" rel=\"nofollow\">Python Documentation for ThreadPoolExecutor</a></li>\n</ul>"}},"pageContext":{"slug":"py/threading/threadpool","previousSlug":"py/threading/queue","nextSlug":null,"previousTitle":"threading.Queue","nextTitle":null}},"staticQueryHashes":[]}