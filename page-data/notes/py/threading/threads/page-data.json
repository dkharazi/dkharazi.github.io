{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/threading/threads","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Threads and Processes"},"html":"<h3>High-Level Understanding of a Process</h3>\n<ul>\n<li>A process is an instance of a computer program that is being executed</li>\n<li>A thread is a basic unit of CPU utilization</li>\n<li>A task is a set of instructions allocated to memory</li>\n<li>A thread is what the CPU actually runs</li>\n<li>A process is what gets loaded in memory</li>\n<li>A process will include one or more threads</li>\n<li>This is because threads are what the CPU actually runs (not processes)</li>\n<li>Tasks and processes are used synonymously sometimes</li>\n</ul>\n<h3>Defining the Structure of a Process</h3>\n<ul>\n<li>\n<p>The process model is based on two independent concepts:</p>\n<ol>\n<li>Resource grouping</li>\n<li>Execution</li>\n</ol>\n</li>\n</ul>\n<p><code class=\"language-text\">Resource Grouping</code></p>\n<ul>\n<li>In terms of resource grouping, a process is something that groups related resources together</li>\n<li>\n<p>Specifically, a process has the foklowing:</p>\n<ul>\n<li>An <strong>address space</strong> containing program text and data</li>\n<li>Information about <strong>open files</strong></li>\n<li>Information about <strong>child processes</strong></li>\n<li>And other resources</li>\n</ul>\n</li>\n</ul>\n<p><code class=\"language-text\">Execution</code></p>\n<ul>\n<li>In terms of execution, a process refers to a primary thread of execution</li>\n<li>A thread of execution refers to a set of threads</li>\n<li>A process doesn't perfectly translate to a set of threads, but we can think of it that way for now</li>\n<li>\n<p>Specifically, a thread has the following:</p>\n<ul>\n<li>A <strong>program counter</strong> that keeps track of which instruction to execute next</li>\n<li>A set of <strong>registers</strong> that hold its current working variables</li>\n<li>A <strong>stack</strong> that contains the thread execution history</li>\n</ul>\n</li>\n</ul>\n<h3>Summarizing Processes and Threads</h3>\n<ul>\n<li>A process refers to a program that is being executed</li>\n<li>A child process is a process created by another process (i.e. the parent process)</li>\n<li>A thread is the basic unit to which the operating system allocates processor time</li>\n<li>A thread can execute any code from the process</li>\n<li>Once a process is created by the operating system, a single thread will be initialized within that process</li>\n<li>This initialized thread is called the <strong>primary thread</strong></li>\n<li>Each process can create additional threads from any of its threads</li>\n</ul>\n<h3>Differentiating between Processes and Threads</h3>\n<ul>\n<li>\n<p>A major difference between a thread and process is:</p>\n<ul>\n<li>\n<p>A process runs in a separate memory space</p>\n<ul>\n<li>Compared to other processes</li>\n</ul>\n</li>\n<li>\n<p>A thread runs in a shared memory space</p>\n<ul>\n<li>Compared to other threads of the same process</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Essentially, processes are used to group resources together</li>\n<li>On the other hand, threads are the entities scheduled for execution on the CPU</li>\n<li>\n<p>For a process, the operating system:</p>\n<ul>\n<li>Allocates memory for its instricutions and data</li>\n</ul>\n</li>\n<li>\n<p>For a thread, the operating system:</p>\n<ul>\n<li>Handles scheduling</li>\n<li>Allocates CPU time</li>\n</ul>\n</li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"http://index-of.co.uk/Python/Python%20Essential%20Reference,%20Fourth%20Edition.pdf\" target=\"_blank\" rel=\"nofollow\">Python Essential Reference</a></li>\n<li><a href=\"https://www.arp.com/medias/13916546.pdf\" target=\"_blank\" rel=\"nofollow\">Python in a Nuteshell</a></li>\n<li><a href=\"http://www.math-cs.gordon.edu/courses/cs312/lectures/pdf/usingOS.pdf\" target=\"_blank\" rel=\"nofollow\">Lecture Slides about the Modern Process and Thread</a></li>\n<li><a href=\"https://stackoverflow.com/questions/1050222/what-is-the-difference-between-concurrency-and-parallelism\" target=\"_blank\" rel=\"nofollow\">Threads and Concurrency</a></li>\n<li><a href=\"https://www.cs.uic.edu/~jbell/CourseNotes/OperatingSystems/4_Threads.html\" target=\"_blank\" rel=\"nofollow\">Illustrating the Thread Context</a></li>\n<li><a href=\"https://stackoverflow.com/questions/5593328/software-threads-vs-hardware-threads/5593432#5593432\" target=\"_blank\" rel=\"nofollow\">Hyperthreading and Hardware Threads</a></li>\n<li><a href=\"https://stackoverflow.com/questions/5593328/software-threads-vs-hardware-threads/5593389#5593389\" target=\"_blank\" rel=\"nofollow\">Hyperthreading and the Operating System</a></li>\n<li><a href=\"https://stackoverflow.com/questions/200469/what-is-the-difference-between-a-process-and-a-thread/19518207#19518207\" target=\"_blank\" rel=\"nofollow\">Defining the Architecture of Hyperthreading</a></li>\n<li><a href=\"https://stackoverflow.com/questions/200469/what-is-the-difference-between-a-process-and-a-thread/200543#200543\" target=\"_blank\" rel=\"nofollow\">Defining a Process and a Thread</a></li>\n<li><a href=\"https://stackoverflow.com/questions/200469/what-is-the-difference-between-a-process-and-a-thread/200475#200475\" target=\"_blank\" rel=\"nofollow\">Another Definition of a Process</a></li>\n<li><a href=\"https://stackoverflow.com/questions/200469/what-is-the-difference-between-a-process-and-a-thread/49841764#49841764\" target=\"_blank\" rel=\"nofollow\">Illustrating a Process and Thread</a></li>\n<li><a href=\"https://stackoverflow.com/questions/3042717/what-is-the-difference-between-a-thread-process-task/3051328#3051328\" target=\"_blank\" rel=\"nofollow\">Difference between Threads, Tasks, and Processes</a></li>\n</ul>"}},"pageContext":{"slug":"py/threading/threads","previousSlug":null,"nextSlug":"py/threading/hyperthreading","previousTitle":null,"nextTitle":"Hyperthreading"}},"staticQueryHashes":[]}