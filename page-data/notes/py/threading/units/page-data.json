{"componentChunkName":"component---src-templates-entry-js","path":"/notes/py/threading/units","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Units of Computation"},"html":"<h3>Defining Units of Computation</h3>\n<ul>\n<li>A single motherboard can have one or more CPUs</li>\n<li>A single CPU can have one or more cores</li>\n<li>A single non-hyperthreaded CPU core can execute a single thread at once</li>\n<li>A single hyperthreaded CPU core can execute two threads at once</li>\n<li>A single process can have one or more threads</li>\n<li>A single program can have one or more processes</li>\n</ul>\n<h3>Illustrating Threads using MS Word</h3>\n<ul>\n<li>Opening MS Word will initiate a process</li>\n<li>MS Word automatically saves typed text at certain time intervals</li>\n<li>Meaning, we're able to edit something and save something at the same time</li>\n<li>In this case, we have two spearate threads for editing and saving</li>\n<li>We've observed editing and saving happening simultaneously</li>\n<li>\n<p>However, this doesn't mean these two threads are being executed in parallel</p>\n<ul>\n<li>\n<p>These two threads are being executed in parallel if they are:</p>\n<ul>\n<li>Executed on two different non-hyperthreaded CPU cores</li>\n<li>Executed on one hyperthreaded CPU core</li>\n</ul>\n</li>\n<li>\n<p>These two threads are being executed concurrently if they are:</p>\n<ul>\n<li>Executed on two different non-hyperthreaded CPU cores</li>\n<li>Executed on one hyperthreaded CPU core</li>\n<li>Executed on one non-hyperthreaded CPU core</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>Illustrating Threads using MS Pain</h3>\n<ul>\n<li>Opening MS Paint will initiate a process</li>\n<li>MS Paint constantly reads mouse location and movements</li>\n<li>Meaning, we're able to draw prictures at any point</li>\n<li>The program must give its full attention to the mouse input and draw at the same time</li>\n<li>To do this, two or more threads of a program will appear to execute simultaneously</li>\n<li>This is called <em>concurrency</em></li>\n<li>\n<p>However, these threads may in fact execute in parallel</p>\n<ul>\n<li>They would need to run these threads on two separate CPU cores</li>\n</ul>\n</li>\n</ul>\n<h3>Illustrating Threads using the JVM</h3>\n<ul>\n<li>A JVM runs in a single process</li>\n<li>Threads in a JVM share the heap belonging to that process</li>\n<li>That is why several threads may access the same object</li>\n<li>Threads share the heap and save their own stack space</li>\n<li>This is how one thread's invocation of a method and its local variables are kept thread safe from other threads</li>\n<li>However, the heap is not thread-safe and must be synchronized for thread safety</li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"http://index-of.co.uk/Python/Python%20Essential%20Reference,%20Fourth%20Edition.pdf\" target=\"_blank\" rel=\"nofollow\">Python Essential Reference</a></li>\n<li><a href=\"https://www.arp.com/medias/13916546.pdf\" target=\"_blank\" rel=\"nofollow\">Python in a Nuteshell</a></li>\n<li><a href=\"https://www.quora.com/What-is-the-difference-between-the-thread-of-a-process-and-the-child-of-a-process-What-are-some-real-time-examples\" target=\"_blank\" rel=\"nofollow\">Examples of a Process and Thread</a></li>\n<li><a href=\"https://stackoverflow.com/questions/1050222/what-is-the-difference-between-concurrency-and-parallelism\" target=\"_blank\" rel=\"nofollow\">Threads and Concurrency</a></li>\n</ul>"}},"pageContext":{"slug":"py/threading/units","previousSlug":"py/threading/hyperthreading","nextSlug":"py/threading/multithreading","previousTitle":"Hyperthreading","nextTitle":"Multithreading"}},"staticQueryHashes":[]}